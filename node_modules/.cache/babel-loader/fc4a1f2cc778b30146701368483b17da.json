{"ast":null,"code":"var _jsxFileName = \"/Users/aaronyeh/Downloads/Plant Buddy/src/components/plantInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SearchContent } from \".//searchContent\";\nimport { useParams } from 'react-router-dom';\nimport '../app.css';\nimport JSONDATA from '../data/plants.json';\nvar species;\n\nfunction PlantInfo(props) {\n  _s();\n\n  const params = useParams();\n  const result = JSONDATA.filter(plant => plant.name == params.name)[0];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Plant Name: \", params.name), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Plant Species: \", result.species), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(PlantInfo, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = PlantInfo;\nexport default PlantInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantInfo\");","map":{"version":3,"names":["React","useState","SearchContent","useParams","JSONDATA","species","PlantInfo","props","params","result","filter","plant","name"],"sources":["/Users/aaronyeh/Downloads/Plant Buddy/src/components/plantInfo.js"],"sourcesContent":["import React,{useState} from 'react'\nimport {SearchContent} from \".//searchContent\"\nimport { useParams } from 'react-router-dom';\nimport '../app.css'\nimport JSONDATA from '../data/plants.json'\n\nvar species;\n\nfunction PlantInfo (props) {\n  const params = useParams()\n  const result = JSONDATA.filter(plant => plant.name == params.name)[0]\n    return(\n      <div>\n      <h1>\n      Plant Name: {params.name}\n      </h1>\n      <h2>\n      Plant Species: {result.species}\n      </h2>\n      <h2>\n      \n      </h2>\n      <h2>\n      </h2>\n      </div>\n    )\n}\nexport default PlantInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAIC,OAAJ;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACzB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;EACA,MAAMM,MAAM,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAcJ,MAAM,CAACI,IAA9C,EAAoD,CAApD,CAAf;EACE,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBACaJ,MAAM,CAACI,IADpB,CADA,eAIA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBACgBH,MAAM,CAACJ,OADvB,CAJA,eAOA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPA,eAUA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVA,CADF;AAeH;;GAlBQC,S;UACQH,S;;;KADRG,S;AAmBT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}