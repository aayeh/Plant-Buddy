{"ast":null,"code":"'use strict';\n\nmodule.exports = yaml;\nyaml.displayName = 'yaml';\nyaml.aliases = ['yml'];\n\nfunction yaml(Prism) {\n  ;\n\n  (function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n    var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n\n    var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n      return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n    });\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\n\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<value>>/g, function () {\n        return value;\n      });\n      return RegExp(pattern, flags);\n    }\n\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        })),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        }).replace(/<<key>>/g, function () {\n          return '(?:' + plainKey + '|' + string + ')';\n        })),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n    Prism.languages.yml = Prism.languages.yaml;\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","yaml","displayName","aliases","Prism","anchorOrAlias","tag","properties","source","plainKey","replace","string","createValuePattern","value","flags","pattern","RegExp","languages","scalar","lookbehind","alias","comment","key","greedy","directive","datetime","boolean","null","number","important","punctuation","yml"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/yaml.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = yaml\r\nyaml.displayName = 'yaml'\r\nyaml.aliases = ['yml']\r\nfunction yaml(Prism) {\r\n  ;(function (Prism) {\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\r\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\r\n    var tag =\r\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\r\n    var properties =\r\n      '(?:' +\r\n      tag.source +\r\n      '(?:[ \\t]+' +\r\n      anchorOrAlias.source +\r\n      ')?|' +\r\n      anchorOrAlias.source +\r\n      '(?:[ \\t]+' +\r\n      tag.source +\r\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\r\n    // This is a simplified version that doesn't support \"#\" and multiline keys\r\n    // All these long scarry character classes are simplified versions of YAML's characters\r\n    var plainKey =\r\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\r\n        /<PLAIN>/g,\r\n        function () {\r\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\r\n            .source\r\n        }\r\n      )\r\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\r\n    function createValuePattern(value, flags) {\r\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\r\n      var pattern =\r\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\r\n          .replace(/<<prop>>/g, function () {\r\n            return properties\r\n          })\r\n          .replace(/<<value>>/g, function () {\r\n            return value\r\n          })\r\n      return RegExp(pattern, flags)\r\n    }\r\n    Prism.languages.yaml = {\r\n      scalar: {\r\n        pattern: RegExp(\r\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\r\n            /<<prop>>/g,\r\n            function () {\r\n              return properties\r\n            }\r\n          )\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'string'\r\n      },\r\n      comment: /#.*/,\r\n      key: {\r\n        pattern: RegExp(\r\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\r\n            .replace(/<<prop>>/g, function () {\r\n              return properties\r\n            })\r\n            .replace(/<<key>>/g, function () {\r\n              return '(?:' + plainKey + '|' + string + ')'\r\n            })\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'atrule'\r\n      },\r\n      directive: {\r\n        pattern: /(^[ \\t]*)%.+/m,\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      datetime: {\r\n        pattern: createValuePattern(\r\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      boolean: {\r\n        pattern: createValuePattern(/false|true/.source, 'i'),\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      null: {\r\n        pattern: createValuePattern(/null|~/.source, 'i'),\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      string: {\r\n        pattern: createValuePattern(string),\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      number: {\r\n        pattern: createValuePattern(\r\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\r\n            .source,\r\n          'i'\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      tag: tag,\r\n      important: anchorOrAlias,\r\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\r\n    }\r\n    Prism.languages.yml = Prism.languages.yaml\r\n  })(Prism)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}