{"ast":null,"code":"/*\r\nLanguage: Nix\r\nAuthor: Domen Kožar <domen@dev.si>\r\nDescription: Nix functional language\r\nWebsite: http://nixos.org/nix\r\n*/\nfunction nix(hljs) {\n  const NIX_KEYWORDS = {\n    keyword: 'rec with let in inherit assert if else then',\n    literal: 'true false or and null',\n    built_in: 'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' + 'toString derivation'\n  };\n  const ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: NIX_KEYWORDS\n  };\n  const ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: /\\S+/\n    }]\n  };\n  const STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [{\n      begin: \"''\",\n      end: \"''\"\n    }, {\n      begin: '\"',\n      end: '\"'\n    }]\n  };\n  const EXPRESSIONS = [hljs.NUMBER_MODE, hljs.HASH_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRING, ATTRS];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    name: 'Nix',\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n}\n\nmodule.exports = nix;","map":{"version":3,"names":["nix","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","ATTRS","returnBegin","relevance","contains","STRING","variants","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","name","aliases","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/nix.js"],"sourcesContent":["/*\r\nLanguage: Nix\r\nAuthor: Domen Kožar <domen@dev.si>\r\nDescription: Nix functional language\r\nWebsite: http://nixos.org/nix\r\n*/\r\n\r\nfunction nix(hljs) {\r\n  const NIX_KEYWORDS = {\r\n    keyword:\r\n      'rec with let in inherit assert if else then',\r\n    literal:\r\n      'true false or and null',\r\n    built_in:\r\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\r\n      'toString derivation'\r\n  };\r\n  const ANTIQUOTE = {\r\n    className: 'subst',\r\n    begin: /\\$\\{/,\r\n    end: /\\}/,\r\n    keywords: NIX_KEYWORDS\r\n  };\r\n  const ATTRS = {\r\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        className: 'attr',\r\n        begin: /\\S+/\r\n      }\r\n    ]\r\n  };\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [ ANTIQUOTE ],\r\n    variants: [\r\n      {\r\n        begin: \"''\",\r\n        end: \"''\"\r\n      },\r\n      {\r\n        begin: '\"',\r\n        end: '\"'\r\n      }\r\n    ]\r\n  };\r\n  const EXPRESSIONS = [\r\n    hljs.NUMBER_MODE,\r\n    hljs.HASH_COMMENT_MODE,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    STRING,\r\n    ATTRS\r\n  ];\r\n  ANTIQUOTE.contains = EXPRESSIONS;\r\n  return {\r\n    name: 'Nix',\r\n    aliases: [ \"nixos\" ],\r\n    keywords: NIX_KEYWORDS,\r\n    contains: EXPRESSIONS\r\n  };\r\n}\r\n\r\nmodule.exports = nix;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,CAAaC,IAAb,EAAmB;EACjB,MAAMC,YAAY,GAAG;IACnBC,OAAO,EACL,6CAFiB;IAGnBC,OAAO,EACL,wBAJiB;IAKnBC,QAAQ,EACN,yEACA;EAPiB,CAArB;EASA,MAAMC,SAAS,GAAG;IAChBC,SAAS,EAAE,OADK;IAEhBC,KAAK,EAAE,MAFS;IAGhBC,GAAG,EAAE,IAHW;IAIhBC,QAAQ,EAAER;EAJM,CAAlB;EAMA,MAAMS,KAAK,GAAG;IACZH,KAAK,EAAE,sBADK;IAEZI,WAAW,EAAE,IAFD;IAGZC,SAAS,EAAE,CAHC;IAIZC,QAAQ,EAAE,CACR;MACEP,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE;IAFT,CADQ;EAJE,CAAd;EAWA,MAAMO,MAAM,GAAG;IACbR,SAAS,EAAE,QADE;IAEbO,QAAQ,EAAE,CAAER,SAAF,CAFG;IAGbU,QAAQ,EAAE,CACR;MACER,KAAK,EAAE,IADT;MAEEC,GAAG,EAAE;IAFP,CADQ,EAKR;MACED,KAAK,EAAE,GADT;MAEEC,GAAG,EAAE;IAFP,CALQ;EAHG,CAAf;EAcA,MAAMQ,WAAW,GAAG,CAClBhB,IAAI,CAACiB,WADa,EAElBjB,IAAI,CAACkB,iBAFa,EAGlBlB,IAAI,CAACmB,oBAHa,EAIlBL,MAJkB,EAKlBJ,KALkB,CAApB;EAOAL,SAAS,CAACQ,QAAV,GAAqBG,WAArB;EACA,OAAO;IACLI,IAAI,EAAE,KADD;IAELC,OAAO,EAAE,CAAE,OAAF,CAFJ;IAGLZ,QAAQ,EAAER,YAHL;IAILY,QAAQ,EAAEG;EAJL,CAAP;AAMD;;AAEDM,MAAM,CAACC,OAAP,GAAiBxB,GAAjB"},"metadata":{},"sourceType":"script"}