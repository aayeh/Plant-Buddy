{"ast":null,"code":"var _jsxFileName = \"/Users/aaronyeh/Downloads/Plant Buddy/src/components/searchContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport JSONDATA from '../data/plants.json';\nimport '../app.css';\nimport PlantInfo from \"./plantInfo.js\";\nimport { Route } from 'react-router-dom';\n\nfunction SearchContent() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"seach by name...\",\n    style: {\n      width: \"400px\"\n    },\n    onChange: e => setSearchTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), JSONDATA.filter(val => {\n    if (searchTerm == \"\") {\n      return val;\n    } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return val;\n    }\n  }).map((val, key) => {\n    /*#__PURE__*/\n    React.createElement(Route, {\n      path: '/search' + val.name,\n      render: () => /*#__PURE__*/React.createElement(PlantInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 56\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    });\n    return /*#__PURE__*/React.createElement(Link, {\n      to: '/search/' + val.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, val.name));\n  }));\n}\n\n_s(SearchContent, \"YAxLNde9buDBdNo+a8YOFgSd3e4=\");\n\n_c = SearchContent;\nexport default SearchContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchContent\");","map":{"version":3,"names":["React","useState","Link","JSONDATA","PlantInfo","Route","SearchContent","searchTerm","setSearchTerm","width","e","target","value","filter","val","name","toLowerCase","includes","map","key"],"sources":["/Users/aaronyeh/Downloads/Plant Buddy/src/components/searchContent.js"],"sourcesContent":["import React,{useState} from 'react'\nimport {Link} from \"react-router-dom\"\nimport JSONDATA from '../data/plants.json'\nimport '../app.css'\nimport PlantInfo from \"./plantInfo.js\"\nimport { Route } from 'react-router-dom';\n\n\nfunction SearchContent () {\n  const [searchTerm,setSearchTerm] = useState('')\n\n  return (\n    <div className=\"search\">\n\n    <br/>\n      <input type=\"text\" placeholder=\"seach by name...\" style={{width: \"400px\"}}\n      onChange={e=>setSearchTerm(e.target.value)}/>\n      <br/>\n      {JSONDATA.filter((val)=>{\n        if(searchTerm == \"\"){\n          return val\n        }\n        else if(val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n          return val;\n        }\n      }).map((val,key)=>{\n        <Route path={'/search'+val.name} render={() => <PlantInfo/>}/>\n\n        return (\n\n          <Link to= {'/search/'+val.name}>\n          <button className=\"button\">\n\n          {val.name}\n          </button>\n          </Link>\n\n        )\n\n      })}\n\n\n    </div>\n  );\n}\n\nexport default SearchContent;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAGA,SAASC,aAAT,GAA0B;EAAA;;EACxB,MAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;EAEA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFA,eAGE;IAAO,IAAI,EAAC,MAAZ;IAAmB,WAAW,EAAC,kBAA/B;IAAkD,KAAK,EAAE;MAACQ,KAAK,EAAE;IAAR,CAAzD;IACA,QAAQ,EAAEC,CAAC,IAAEF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAD1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,eAKE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,EAMGT,QAAQ,CAACU,MAAT,CAAiBC,GAAD,IAAO;IACtB,IAAGP,UAAU,IAAI,EAAjB,EAAoB;MAClB,OAAOO,GAAP;IACD,CAFD,MAGK,IAAGA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCV,UAAU,CAACS,WAAX,EAAhC,CAAH,EAA6D;MAChE,OAAOF,GAAP;IACD;EACF,CAPA,EAOEI,GAPF,CAOM,CAACJ,GAAD,EAAKK,GAAL,KAAW;IAChB;IAAA,oBAAC,KAAD;MAAO,IAAI,EAAE,YAAUL,GAAG,CAACC,IAA3B;MAAiC,MAAM,EAAE,mBAAM,oBAAC,SAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAA/C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA;IAEA,oBAEE,oBAAC,IAAD;MAAM,EAAE,EAAG,aAAWD,GAAG,CAACC,IAA1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACA;MAAQ,SAAS,EAAC,QAAlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAECD,GAAG,CAACC,IAFL,CADA,CAFF;EAWD,CArBA,CANH,CADF;AAiCD;;GApCQT,a;;KAAAA,a;AAsCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}