{"ast":null,"code":"'use strict';\n\nmodule.exports = pascal;\npascal.displayName = 'pascal';\npascal.aliases = ['objectpascal'];\n\nfunction pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\r\n  Support inline asm ?\r\n  */\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    keyword: [{\n      // Turbo Pascal\n      pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n      lookbehind: true\n    }, {\n      // Free Pascal\n      pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n      lookbehind: true\n    }, {\n      // Object Pascal\n      pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n      lookbehind: true\n    }, {\n      // Modifiers\n      pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n      lookbehind: true\n    }],\n    number: [// Hexadecimal, octal and binary\n    /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n    operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/, {\n      pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  };\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  });\n  Prism.languages.objectpascal = Prism.languages.pascal;\n}","map":{"version":3,"names":["module","exports","pascal","displayName","aliases","Prism","languages","directive","pattern","greedy","alias","comment","string","asm","lookbehind","inside","keyword","number","operator","punctuation","extend","undefined","objectpascal"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/pascal.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = pascal\r\npascal.displayName = 'pascal'\r\npascal.aliases = ['objectpascal']\r\nfunction pascal(Prism) {\r\n  // Based on Free Pascal\r\n  /* TODO\r\nSupport inline asm ?\r\n*/\r\n  Prism.languages.pascal = {\r\n    directive: {\r\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\r\n      greedy: true,\r\n      alias: ['marco', 'property']\r\n    },\r\n    comment: {\r\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\r\n      greedy: true\r\n    },\r\n    asm: {\r\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: null // see below\r\n    },\r\n    keyword: [\r\n      {\r\n        // Turbo Pascal\r\n        pattern:\r\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Free Pascal\r\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Object Pascal\r\n        pattern:\r\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Modifiers\r\n        pattern:\r\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    number: [\r\n      // Hexadecimal, octal and binary\r\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\r\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\r\n    ],\r\n    operator: [\r\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\r\n      {\r\n        pattern:\r\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\r\n  }\r\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\r\n    asm: undefined,\r\n    keyword: undefined,\r\n    operator: undefined\r\n  })\r\n  Prism.languages.objectpascal = Prism.languages.pascal\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,cAAD,CAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACrB;;EACA;AACF;AACA;EACEA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;IACvBK,SAAS,EAAE;MACTC,OAAO,EAAE,gBADA;MAETC,MAAM,EAAE,IAFC;MAGTC,KAAK,EAAE,CAAC,OAAD,EAAU,UAAV;IAHE,CADY;IAMvBC,OAAO,EAAE;MACPH,OAAO,EAAE,sCADF;MAEPC,MAAM,EAAE;IAFD,CANc;IAUvBG,MAAM,EAAE;MACNJ,OAAO,EAAE,uDADH;MAENC,MAAM,EAAE;IAFF,CAVe;IAcvBI,GAAG,EAAE;MACHL,OAAO,EAAE,oCADN;MAEHM,UAAU,EAAE,IAFT;MAGHL,MAAM,EAAE,IAHL;MAIHM,MAAM,EAAE,IAJL,CAIU;;IAJV,CAdkB;IAoBvBC,OAAO,EAAE,CACP;MACE;MACAR,OAAO,EACL,gTAHJ;MAIEM,UAAU,EAAE;IAJd,CADO,EAOP;MACE;MACAN,OAAO,EAAE,8CAFX;MAGEM,UAAU,EAAE;IAHd,CAPO,EAYP;MACE;MACAN,OAAO,EACL,kKAHJ;MAIEM,UAAU,EAAE;IAJd,CAZO,EAkBP;MACE;MACAN,OAAO,EACL,khBAHJ;MAIEM,UAAU,EAAE;IAJd,CAlBO,CApBc;IA6CvBG,MAAM,EAAE,CACN;IACA,yBAFM,EAEqB;IAC3B,gCAHM,CA7Ce;IAkDvBC,QAAQ,EAAE,CACR,8CADQ,EAER;MACEV,OAAO,EACL,yEAFJ;MAGEM,UAAU,EAAE;IAHd,CAFQ,CAlDa;IA0DvBK,WAAW,EAAE;EA1DU,CAAzB;EA4DAd,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuBW,GAAvB,CAA2BE,MAA3B,GAAoCV,KAAK,CAACC,SAAN,CAAgBc,MAAhB,CAAuB,QAAvB,EAAiC;IACnEP,GAAG,EAAEQ,SAD8D;IAEnEL,OAAO,EAAEK,SAF0D;IAGnEH,QAAQ,EAAEG;EAHyD,CAAjC,CAApC;EAKAhB,KAAK,CAACC,SAAN,CAAgBgB,YAAhB,GAA+BjB,KAAK,CAACC,SAAN,CAAgBJ,MAA/C;AACD"},"metadata":{},"sourceType":"script"}