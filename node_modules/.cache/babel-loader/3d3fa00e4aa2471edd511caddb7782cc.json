{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\r\nLanguage: Augmented Backus-Naur Form\r\nAuthor: Alex McKibben <alex@nullscope.net>\r\nWebsite: https://tools.ietf.org/html/rfc5234\r\nAudit: 2020\r\n*/\n\n/** @type LanguageFn */\n\n\nfunction abnf(hljs) {\n  const regexes = {\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\n    unexpectedChars: /[!@#$^&',?+~`|:]/\n  };\n  const keywords = [\"ALPHA\", \"BIT\", \"CHAR\", \"CR\", \"CRLF\", \"CTL\", \"DIGIT\", \"DQUOTE\", \"HEXDIG\", \"HTAB\", \"LF\", \"LWSP\", \"OCTET\", \"SP\", \"VCHAR\", \"WSP\"];\n  const commentMode = hljs.COMMENT(/;/, /$/);\n  const terminalBinaryMode = {\n    className: \"symbol\",\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n  };\n  const terminalDecimalMode = {\n    className: \"symbol\",\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n  };\n  const terminalHexadecimalMode = {\n    className: \"symbol\",\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\n  };\n  const caseSensitivityIndicatorMode = {\n    className: \"symbol\",\n    begin: /%[si]/\n  };\n  const ruleDeclarationMode = {\n    className: \"attribute\",\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\n  };\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: regexes.unexpectedChars,\n    keywords: keywords,\n    contains: [ruleDeclarationMode, commentMode, terminalBinaryMode, terminalDecimalMode, terminalHexadecimalMode, caseSensitivityIndicatorMode, hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE]\n  };\n}\n\nmodule.exports = abnf;","map":{"version":3,"names":["source","re","concat","args","joined","map","x","join","abnf","hljs","regexes","ruleDeclaration","unexpectedChars","keywords","commentMode","COMMENT","terminalBinaryMode","className","begin","terminalDecimalMode","terminalHexadecimalMode","caseSensitivityIndicatorMode","ruleDeclarationMode","name","illegal","contains","QUOTE_STRING_MODE","NUMBER_MODE","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/abnf.js"],"sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Augmented Backus-Naur Form\r\nAuthor: Alex McKibben <alex@nullscope.net>\r\nWebsite: https://tools.ietf.org/html/rfc5234\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction abnf(hljs) {\r\n  const regexes = {\r\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\r\n    unexpectedChars: /[!@#$^&',?+~`|:]/\r\n  };\r\n\r\n  const keywords = [\r\n    \"ALPHA\",\r\n    \"BIT\",\r\n    \"CHAR\",\r\n    \"CR\",\r\n    \"CRLF\",\r\n    \"CTL\",\r\n    \"DIGIT\",\r\n    \"DQUOTE\",\r\n    \"HEXDIG\",\r\n    \"HTAB\",\r\n    \"LF\",\r\n    \"LWSP\",\r\n    \"OCTET\",\r\n    \"SP\",\r\n    \"VCHAR\",\r\n    \"WSP\"\r\n  ];\r\n\r\n  const commentMode = hljs.COMMENT(/;/, /$/);\r\n\r\n  const terminalBinaryMode = {\r\n    className: \"symbol\",\r\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\r\n  };\r\n\r\n  const terminalDecimalMode = {\r\n    className: \"symbol\",\r\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\r\n  };\r\n\r\n  const terminalHexadecimalMode = {\r\n    className: \"symbol\",\r\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\r\n  };\r\n\r\n  const caseSensitivityIndicatorMode = {\r\n    className: \"symbol\",\r\n    begin: /%[si]/\r\n  };\r\n\r\n  const ruleDeclarationMode = {\r\n    className: \"attribute\",\r\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\r\n  };\r\n\r\n  return {\r\n    name: 'Augmented Backus-Naur Form',\r\n    illegal: regexes.unexpectedChars,\r\n    keywords: keywords,\r\n    contains: [\r\n      ruleDeclarationMode,\r\n      commentMode,\r\n      terminalBinaryMode,\r\n      terminalDecimalMode,\r\n      terminalHexadecimalMode,\r\n      caseSensitivityIndicatorMode,\r\n      hljs.QUOTE_STRING_MODE,\r\n      hljs.NUMBER_MODE\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = abnf;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;EAClB,IAAI,CAACA,EAAL,EAAS,OAAO,IAAP;EACT,IAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B,OAAOA,EAAP;EAE5B,OAAOA,EAAE,CAACD,MAAV;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASE,MAAT,GAAyB;EAAA,kCAANC,IAAM;IAANA,IAAM;EAAA;;EACvB,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAAUC,CAAD,IAAON,MAAM,CAACM,CAAD,CAAtB,EAA2BC,IAA3B,CAAgC,EAAhC,CAAf;EACA,OAAOH,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,SAASI,IAAT,CAAcC,IAAd,EAAoB;EAClB,MAAMC,OAAO,GAAG;IACdC,eAAe,EAAE,wBADH;IAEdC,eAAe,EAAE;EAFH,CAAhB;EAKA,MAAMC,QAAQ,GAAG,CACf,OADe,EAEf,KAFe,EAGf,MAHe,EAIf,IAJe,EAKf,MALe,EAMf,KANe,EAOf,OAPe,EAQf,QARe,EASf,QATe,EAUf,MAVe,EAWf,IAXe,EAYf,MAZe,EAaf,OAbe,EAcf,IAde,EAef,OAfe,EAgBf,KAhBe,CAAjB;EAmBA,MAAMC,WAAW,GAAGL,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAApB;EAEA,MAAMC,kBAAkB,GAAG;IACzBC,SAAS,EAAE,QADc;IAEzBC,KAAK,EAAE;EAFkB,CAA3B;EAKA,MAAMC,mBAAmB,GAAG;IAC1BF,SAAS,EAAE,QADe;IAE1BC,KAAK,EAAE;EAFmB,CAA5B;EAKA,MAAME,uBAAuB,GAAG;IAC9BH,SAAS,EAAE,QADmB;IAE9BC,KAAK,EAAE;EAFuB,CAAhC;EAKA,MAAMG,4BAA4B,GAAG;IACnCJ,SAAS,EAAE,QADwB;IAEnCC,KAAK,EAAE;EAF4B,CAArC;EAKA,MAAMI,mBAAmB,GAAG;IAC1BL,SAAS,EAAE,WADe;IAE1BC,KAAK,EAAEhB,MAAM,CAACQ,OAAO,CAACC,eAAT,EAA0B,UAA1B;EAFa,CAA5B;EAKA,OAAO;IACLY,IAAI,EAAE,4BADD;IAELC,OAAO,EAAEd,OAAO,CAACE,eAFZ;IAGLC,QAAQ,EAAEA,QAHL;IAILY,QAAQ,EAAE,CACRH,mBADQ,EAERR,WAFQ,EAGRE,kBAHQ,EAIRG,mBAJQ,EAKRC,uBALQ,EAMRC,4BANQ,EAORZ,IAAI,CAACiB,iBAPG,EAQRjB,IAAI,CAACkB,WARG;EAJL,CAAP;AAeD;;AAEDC,MAAM,CAACC,OAAP,GAAiBrB,IAAjB"},"metadata":{},"sourceType":"script"}