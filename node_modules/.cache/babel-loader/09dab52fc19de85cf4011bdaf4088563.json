{"ast":null,"code":"'use strict';\n\nmodule.exports = actionscript;\nactionscript.displayName = 'actionscript';\nactionscript.aliases = [];\n\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  });\n  Prism.languages.actionscript['class-name'].alias = 'function'; // doesn't work with AS because AS is too complex\n\n  delete Prism.languages.actionscript['parameter'];\n  delete Prism.languages.actionscript['literal-property'];\n\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    });\n  }\n}","map":{"version":3,"names":["module","exports","actionscript","displayName","aliases","Prism","languages","extend","keyword","operator","alias","markup","insertBefore","xml","pattern","lookbehind","inside"],"sources":["/Users/aaronyeh/Downloads/Plant Buddy/node_modules/refractor/lang/actionscript.js"],"sourcesContent":["'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function' // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AACAA,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,EAAvB;;AACA,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;EAC3BA,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,GAA+BG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,YAAvB,EAAqC;IAClEC,OAAO,EACL,sUAFgE;IAGlEC,QAAQ,EAAE;EAHwD,CAArC,CAA/B;EAKAJ,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,CAA6B,YAA7B,EAA2CQ,KAA3C,GAAmD,UAAnD,CAN2B,CAMmC;;EAC9D,OAAOL,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,CAA6B,WAA7B,CAAP;EACA,OAAOG,KAAK,CAACC,SAAN,CAAgBJ,YAAhB,CAA6B,kBAA7B,CAAP;;EACA,IAAIG,KAAK,CAACC,SAAN,CAAgBK,MAApB,EAA4B;IAC1BN,KAAK,CAACC,SAAN,CAAgBM,YAAhB,CAA6B,cAA7B,EAA6C,QAA7C,EAAuD;MACrDC,GAAG,EAAE;QACHC,OAAO,EACL,2EAFC;QAGHC,UAAU,EAAE,IAHT;QAIHC,MAAM,EAAEX,KAAK,CAACC,SAAN,CAAgBK;MAJrB;IADgD,CAAvD;EAQD;AACF"},"metadata":{},"sourceType":"script"}