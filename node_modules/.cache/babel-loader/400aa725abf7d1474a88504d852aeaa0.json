{"ast":null,"code":"'use strict';\n\nmodule.exports = wren;\nwren.displayName = 'wren';\nwren.aliases = [];\n\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [{\n      // support 3 levels of nesting\n      // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n      pattern: /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [{\n      // class definition\n      // class Meta {}\n      pattern: /(\\bclass\\s+)\\w+/,\n      lookbehind: true\n    }, // A class must always start with an uppercase.\n    // File.read\n    /\\b[A-Z][a-z\\d_]*\\b/],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword: /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  };\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern: /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  };\n}","map":{"version":3,"names":["module","exports","wren","displayName","aliases","Prism","languages","comment","pattern","greedy","lookbehind","alias","hashbang","attribute","constant","null","keyword","boolean","number","function","operator","punctuation","inside","interpolation","expression","string"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/wren.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = wren\r\nwren.displayName = 'wren'\r\nwren.aliases = []\r\nfunction wren(Prism) {\r\n  // https://wren.io/\r\n  Prism.languages.wren = {\r\n    // Multiline comments in Wren can have nested multiline comments\r\n    // Comments: // and /* */\r\n    comment: [\r\n      {\r\n        // support 3 levels of nesting\r\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\r\n        pattern:\r\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\r\n    // Based on prism-python.js\r\n    'triple-quoted-string': {\r\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    // see below\r\n    'string-literal': null,\r\n    // #!/usr/bin/env wren on the first line\r\n    hashbang: {\r\n      pattern: /^#!\\/.+/,\r\n      greedy: true,\r\n      alias: 'comment'\r\n    },\r\n    // Attributes are special keywords to add meta data to classes\r\n    attribute: {\r\n      // #! attributes are stored in class properties\r\n      // #!myvar = true\r\n      // #attributes are not stored and dismissed at compilation\r\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\r\n      alias: 'keyword'\r\n    },\r\n    'class-name': [\r\n      {\r\n        // class definition\r\n        // class Meta {}\r\n        pattern: /(\\bclass\\s+)\\w+/,\r\n        lookbehind: true\r\n      }, // A class must always start with an uppercase.\r\n      // File.read\r\n      /\\b[A-Z][a-z\\d_]*\\b/\r\n    ],\r\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\r\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\r\n    null: {\r\n      pattern: /\\bnull\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    keyword:\r\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\r\n    // Functions can be Class.method()\r\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\r\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\r\n    punctuation: /[\\[\\](){}.,;]/\r\n  }\r\n  Prism.languages.wren['string-literal'] = {\r\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\r\n    pattern:\r\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\r\n    lookbehind: true,\r\n    greedy: true,\r\n    inside: {\r\n      interpolation: {\r\n        // \"%(interpolation)\"\r\n        pattern:\r\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          expression: {\r\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\r\n            lookbehind: true,\r\n            inside: Prism.languages.wren\r\n          },\r\n          'interpolation-punctuation': {\r\n            pattern: /^%\\(|\\)$/,\r\n            alias: 'punctuation'\r\n          }\r\n        }\r\n      },\r\n      string: /[\\s\\S]+/\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnB;EACAA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;IACrB;IACA;IACAK,OAAO,EAAE,CACP;MACE;MACA;MACAC,OAAO,EACL,gHAJJ;MAKEC,MAAM,EAAE;IALV,CADO,EAQP;MACED,OAAO,EAAE,kBADX;MAEEE,UAAU,EAAE,IAFd;MAGED,MAAM,EAAE;IAHV,CARO,CAHY;IAiBrB;IACA;IACA,wBAAwB;MACtBD,OAAO,EAAE,gBADa;MAEtBC,MAAM,EAAE,IAFc;MAGtBE,KAAK,EAAE;IAHe,CAnBH;IAwBrB;IACA,kBAAkB,IAzBG;IA0BrB;IACAC,QAAQ,EAAE;MACRJ,OAAO,EAAE,SADD;MAERC,MAAM,EAAE,IAFA;MAGRE,KAAK,EAAE;IAHC,CA3BW;IAgCrB;IACAE,SAAS,EAAE;MACT;MACA;MACA;MACAL,OAAO,EAAE,oBAJA;MAKTG,KAAK,EAAE;IALE,CAjCU;IAwCrB,cAAc,CACZ;MACE;MACA;MACAH,OAAO,EAAE,iBAHX;MAIEE,UAAU,EAAE;IAJd,CADY,EAMT;IACH;IACA,oBARY,CAxCO;IAkDrB;IACAI,QAAQ,EAAE,oBAnDW;IAoDrBC,IAAI,EAAE;MACJP,OAAO,EAAE,UADL;MAEJG,KAAK,EAAE;IAFH,CApDe;IAwDrBK,OAAO,EACL,+GAzDmB;IA0DrBC,OAAO,EAAE,oBA1DY;IA2DrBC,MAAM,EAAE,iDA3Da;IA4DrB;IACAC,QAAQ,EAAE,yBA7DW;IA8DrBC,QAAQ,EAAE,8CA9DW;IA+DrBC,WAAW,EAAE;EA/DQ,CAAvB;EAiEAhB,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqB,gBAArB,IAAyC;IACvC;IACAM,OAAO,EACL,oFAHqC;IAIvCE,UAAU,EAAE,IAJ2B;IAKvCD,MAAM,EAAE,IAL+B;IAMvCa,MAAM,EAAE;MACNC,aAAa,EAAE;QACb;QACAf,OAAO,EACL,iEAHW;QAIbE,UAAU,EAAE,IAJC;QAKbY,MAAM,EAAE;UACNE,UAAU,EAAE;YACVhB,OAAO,EAAE,sBADC;YAEVE,UAAU,EAAE,IAFF;YAGVY,MAAM,EAAEjB,KAAK,CAACC,SAAN,CAAgBJ;UAHd,CADN;UAMN,6BAA6B;YAC3BM,OAAO,EAAE,UADkB;YAE3BG,KAAK,EAAE;UAFoB;QANvB;MALK,CADT;MAkBNc,MAAM,EAAE;IAlBF;EAN+B,CAAzC;AA2BD"},"metadata":{},"sourceType":"script"}