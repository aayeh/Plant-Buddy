{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\r\nLanguage: QML\r\nRequires: javascript.js, xml.js\r\nAuthor: John Foster <jfoster@esri.com>\r\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\r\n             the JavaScript parser.\r\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\r\nCategory: scripting\r\n*/\n\n\nfunction qml(hljs) {\n  const KEYWORDS = {\n    keyword: 'in of on if for while finally var new function do return void else break catch ' + 'instanceof with throw case default try this switch continue typeof delete ' + 'let yield const export super debugger as async await import',\n    literal: 'true false null undefined NaN Infinity',\n    built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' + 'TypeError URIError Number Math Date String RegExp Array Float32Array ' + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' + 'Behavior bool color coordinate date double enumeration font geocircle georectangle ' + 'geoshape int list matrix4x4 parent point quaternion real rect ' + 'size string url variant vector2d vector3d vector4d ' + 'Promise'\n  };\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*'; // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n\n  const PROPERTY = {\n    className: 'keyword',\n    begin: '\\\\bproperty\\\\b',\n    starts: {\n      className: 'string',\n      end: '(:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  }; // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n\n  const SIGNAL = {\n    className: 'keyword',\n    begin: '\\\\bsignal\\\\b',\n    starts: {\n      className: 'string',\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  }; // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n\n  const ID_ID = {\n    className: 'attribute',\n    begin: '\\\\bid\\\\s*:',\n    starts: {\n      className: 'string',\n      end: QML_IDENT_RE,\n      returnEnd: false\n    }\n  }; // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n\n  const QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [{\n      className: 'attribute',\n      begin: QML_IDENT_RE,\n      end: '\\\\s*:',\n      excludeEnd: true,\n      relevance: 0\n    }],\n    relevance: 0\n  }; // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n\n  const QML_OBJECT = {\n    begin: concat(QML_IDENT_RE, /\\s*\\{/),\n    end: /\\{/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: QML_IDENT_RE\n    })]\n  };\n  return {\n    name: 'QML',\n    aliases: ['qt'],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      // template string\n      className: 'string',\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE, {\n        className: 'subst',\n        begin: '\\\\$\\\\{',\n        end: '\\\\}'\n      }]\n    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b(0[bB][01]+)'\n      }, {\n        begin: '\\\\b(0[oO][0-7]+)'\n      }, {\n        begin: hljs.C_NUMBER_RE\n      }],\n      relevance: 0\n    }, {\n      // \"value\" container\n      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n      keywords: 'return throw case',\n      contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {\n        // E4X / JSX\n        begin: /</,\n        end: />\\s*[);\\]]/,\n        relevance: 0,\n        subLanguage: 'xml'\n      }],\n      relevance: 0\n    }, SIGNAL, PROPERTY, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: /\\{/,\n      excludeEnd: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n      }), {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n      }],\n      illegal: /\\[|%/\n    }, {\n      // hack: prevents detection of keywords after dots\n      begin: '\\\\.' + hljs.IDENT_RE,\n      relevance: 0\n    }, ID_ID, QML_ATTRIBUTE, QML_OBJECT],\n    illegal: /#/\n  };\n}\n\nmodule.exports = qml;","map":{"version":3,"names":["source","re","concat","args","joined","map","x","join","qml","hljs","KEYWORDS","keyword","literal","built_in","QML_IDENT_RE","PROPERTY","className","begin","starts","end","returnEnd","SIGNAL","ID_ID","QML_ATTRIBUTE","returnBegin","contains","excludeEnd","relevance","QML_OBJECT","inherit","TITLE_MODE","name","aliases","case_insensitive","keywords","APOS_STRING_MODE","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","variants","C_NUMBER_RE","RE_STARTERS_RE","REGEXP_MODE","subLanguage","beginKeywords","excludeBegin","illegal","IDENT_RE","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/qml.js"],"sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: QML\r\nRequires: javascript.js, xml.js\r\nAuthor: John Foster <jfoster@esri.com>\r\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\r\n             the JavaScript parser.\r\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\r\nCategory: scripting\r\n*/\r\n\r\nfunction qml(hljs) {\r\n  const KEYWORDS = {\r\n    keyword:\r\n      'in of on if for while finally var new function do return void else break catch ' +\r\n      'instanceof with throw case default try this switch continue typeof delete ' +\r\n      'let yield const export super debugger as async await import',\r\n    literal:\r\n      'true false null undefined NaN Infinity',\r\n    built_in:\r\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\r\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\r\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\r\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\r\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\r\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\r\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\r\n      'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +\r\n      'geoshape int list matrix4x4 parent point quaternion real rect ' +\r\n      'size string url variant vector2d vector3d vector4d ' +\r\n      'Promise'\r\n  };\r\n\r\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\r\n\r\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\r\n  // Use property class.\r\n  const PROPERTY = {\r\n    className: 'keyword',\r\n    begin: '\\\\bproperty\\\\b',\r\n    starts: {\r\n      className: 'string',\r\n      end: '(:|=|;|,|//|/\\\\*|$)',\r\n      returnEnd: true\r\n    }\r\n  };\r\n\r\n  // Isolate signal statements. Ends at a ) a comment or end of line.\r\n  // Use property class.\r\n  const SIGNAL = {\r\n    className: 'keyword',\r\n    begin: '\\\\bsignal\\\\b',\r\n    starts: {\r\n      className: 'string',\r\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\r\n      returnEnd: true\r\n    }\r\n  };\r\n\r\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\r\n  // emphasize the token following.\r\n  const ID_ID = {\r\n    className: 'attribute',\r\n    begin: '\\\\bid\\\\s*:',\r\n    starts: {\r\n      className: 'string',\r\n      end: QML_IDENT_RE,\r\n      returnEnd: false\r\n    }\r\n  };\r\n\r\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\r\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\r\n  // objects, object definitions, or javascript. The true end is either when the parent\r\n  // ends or the next attribute is detected.\r\n  const QML_ATTRIBUTE = {\r\n    begin: QML_IDENT_RE + '\\\\s*:',\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        className: 'attribute',\r\n        begin: QML_IDENT_RE,\r\n        end: '\\\\s*:',\r\n        excludeEnd: true,\r\n        relevance: 0\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\r\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\r\n  const QML_OBJECT = {\r\n    begin: concat(QML_IDENT_RE, /\\s*\\{/),\r\n    end: /\\{/,\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        begin: QML_IDENT_RE\r\n      })\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'QML',\r\n    aliases: [ 'qt' ],\r\n    case_insensitive: false,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      {\r\n        className: 'meta',\r\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      { // template string\r\n        className: 'string',\r\n        begin: '`',\r\n        end: '`',\r\n        contains: [\r\n          hljs.BACKSLASH_ESCAPE,\r\n          {\r\n            className: 'subst',\r\n            begin: '\\\\$\\\\{',\r\n            end: '\\\\}'\r\n          }\r\n        ]\r\n      },\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        className: 'number',\r\n        variants: [\r\n          {\r\n            begin: '\\\\b(0[bB][01]+)'\r\n          },\r\n          {\r\n            begin: '\\\\b(0[oO][0-7]+)'\r\n          },\r\n          {\r\n            begin: hljs.C_NUMBER_RE\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      { // \"value\" container\r\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\r\n        keywords: 'return throw case',\r\n        contains: [\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE,\r\n          hljs.REGEXP_MODE,\r\n          { // E4X / JSX\r\n            begin: /</,\r\n            end: />\\s*[);\\]]/,\r\n            relevance: 0,\r\n            subLanguage: 'xml'\r\n          }\r\n        ],\r\n        relevance: 0\r\n      },\r\n      SIGNAL,\r\n      PROPERTY,\r\n      {\r\n        className: 'function',\r\n        beginKeywords: 'function',\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        contains: [\r\n          hljs.inherit(hljs.TITLE_MODE, {\r\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\r\n          }),\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            contains: [\r\n              hljs.C_LINE_COMMENT_MODE,\r\n              hljs.C_BLOCK_COMMENT_MODE\r\n            ]\r\n          }\r\n        ],\r\n        illegal: /\\[|%/\r\n      },\r\n      {\r\n        // hack: prevents detection of keywords after dots\r\n        begin: '\\\\.' + hljs.IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      ID_ID,\r\n      QML_ATTRIBUTE,\r\n      QML_OBJECT\r\n    ],\r\n    illegal: /#/\r\n  };\r\n}\r\n\r\nmodule.exports = qml;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}