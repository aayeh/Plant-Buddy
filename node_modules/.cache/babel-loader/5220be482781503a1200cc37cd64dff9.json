{"ast":null,"code":"/*\r\nLanguage: OCaml\r\nAuthor: Mehdi Dogguy <mehdi@dogguy.org>\r\nContributors: Nicolas Braud-Santoni <nicolas.braud-santoni@ens-cachan.fr>, Mickael Delahaye <mickael.delahaye@gmail.com>\r\nDescription: OCaml language definition.\r\nWebsite: https://ocaml.org\r\nCategory: functional\r\n*/\nfunction ocaml(hljs) {\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n  return {\n    name: 'OCaml',\n    aliases: ['ml'],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword: 'and as assert asr begin class constraint do done downto else end ' + 'exception external for fun function functor if in include ' + 'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' + 'mod module mutable new object of open! open or private rec sig struct ' + 'then to try type val! val virtual when while with ' +\n      /* camlp4 */\n      'parser value',\n      built_in:\n      /* built-in types */\n      'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\n      /* (some) types in Pervasives */\n      'in_channel out_channel ref',\n      literal: 'true false'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [{\n      className: 'literal',\n      begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\n      relevance: 0\n    }, hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)', {\n      contains: ['self']\n    }), {\n      /* type variable */\n      className: 'symbol',\n      begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n      /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\n    }, {\n      /* polymorphic variant */\n      className: 'type',\n      begin: '`[A-Z][\\\\w\\']*'\n    }, {\n      /* module or constructor */\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w\\']*',\n      relevance: 0\n    }, {\n      /* don't color identifiers, but safely catch all identifiers with '*/\n      begin: '[a-z_]\\\\w*\\'[\\\\w\\']*',\n      relevance: 0\n    }, hljs.inherit(hljs.APOS_STRING_MODE, {\n      className: 'string',\n      relevance: 0\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), {\n      className: 'number',\n      begin: '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' + '0[oO][0-7_]+[Lln]?|' + '0[bB][01_]+[Lln]?|' + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n      relevance: 0\n    }, {\n      begin: /->/ // relevance booster\n\n    }]\n  };\n}\n\nmodule.exports = ocaml;","map":{"version":3,"names":["ocaml","hljs","name","aliases","keywords","$pattern","keyword","built_in","literal","illegal","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/ocaml.js"],"sourcesContent":["/*\r\nLanguage: OCaml\r\nAuthor: Mehdi Dogguy <mehdi@dogguy.org>\r\nContributors: Nicolas Braud-Santoni <nicolas.braud-santoni@ens-cachan.fr>, Mickael Delahaye <mickael.delahaye@gmail.com>\r\nDescription: OCaml language definition.\r\nWebsite: https://ocaml.org\r\nCategory: functional\r\n*/\r\n\r\nfunction ocaml(hljs) {\r\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\r\n  return {\r\n    name: 'OCaml',\r\n    aliases: ['ml'],\r\n    keywords: {\r\n      $pattern: '[a-z_]\\\\w*!?',\r\n      keyword:\r\n        'and as assert asr begin class constraint do done downto else end ' +\r\n        'exception external for fun function functor if in include ' +\r\n        'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +\r\n        'mod module mutable new object of open! open or private rec sig struct ' +\r\n        'then to try type val! val virtual when while with ' +\r\n        /* camlp4 */\r\n        'parser value',\r\n      built_in:\r\n        /* built-in types */\r\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\r\n        /* (some) types in Pervasives */\r\n        'in_channel out_channel ref',\r\n      literal:\r\n        'true false'\r\n    },\r\n    illegal: /\\/\\/|>>/,\r\n    contains: [\r\n      {\r\n        className: 'literal',\r\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\r\n        relevance: 0\r\n      },\r\n      hljs.COMMENT(\r\n        '\\\\(\\\\*',\r\n        '\\\\*\\\\)',\r\n        {\r\n          contains: ['self']\r\n        }\r\n      ),\r\n      { /* type variable */\r\n        className: 'symbol',\r\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\r\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\r\n      },\r\n      { /* polymorphic variant */\r\n        className: 'type',\r\n        begin: '`[A-Z][\\\\w\\']*'\r\n      },\r\n      { /* module or constructor */\r\n        className: 'type',\r\n        begin: '\\\\b[A-Z][\\\\w\\']*',\r\n        relevance: 0\r\n      },\r\n      { /* don't color identifiers, but safely catch all identifiers with '*/\r\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*', relevance: 0\r\n      },\r\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\r\n      {\r\n        className: 'number',\r\n        begin:\r\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\r\n          '0[oO][0-7_]+[Lln]?|' +\r\n          '0[bB][01_]+[Lln]?|' +\r\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: /->/ // relevance booster\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nmodule.exports = ocaml;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;EACnB;EACA,OAAO;IACLC,IAAI,EAAE,OADD;IAELC,OAAO,EAAE,CAAC,IAAD,CAFJ;IAGLC,QAAQ,EAAE;MACRC,QAAQ,EAAE,cADF;MAERC,OAAO,EACL,sEACA,4DADA,GAEA,sFAFA,GAGA,wEAHA,GAIA,oDAJA;MAKA;MACA,cATM;MAURC,QAAQ;MACN;MACA;MACA;MACA,4BAdM;MAeRC,OAAO,EACL;IAhBM,CAHL;IAqBLC,OAAO,EAAE,SArBJ;IAsBLC,QAAQ,EAAE,CACR;MACEC,SAAS,EAAE,SADb;MAEEC,KAAK,EAAE,wBAFT;MAGEC,SAAS,EAAE;IAHb,CADQ,EAMRZ,IAAI,CAACa,OAAL,CACE,QADF,EAEE,QAFF,EAGE;MACEJ,QAAQ,EAAE,CAAC,MAAD;IADZ,CAHF,CANQ,EAaR;MAAE;MACAC,SAAS,EAAE,QADb;MAEEC,KAAK,EAAE;MACP;;IAHF,CAbQ,EAkBR;MAAE;MACAD,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE;IAFT,CAlBQ,EAsBR;MAAE;MACAD,SAAS,EAAE,MADb;MAEEC,KAAK,EAAE,kBAFT;MAGEC,SAAS,EAAE;IAHb,CAtBQ,EA2BR;MAAE;MACAD,KAAK,EAAE,sBADT;MACiCC,SAAS,EAAE;IAD5C,CA3BQ,EA8BRZ,IAAI,CAACc,OAAL,CAAad,IAAI,CAACe,gBAAlB,EAAoC;MAACL,SAAS,EAAE,QAAZ;MAAsBE,SAAS,EAAE;IAAjC,CAApC,CA9BQ,EA+BRZ,IAAI,CAACc,OAAL,CAAad,IAAI,CAACgB,iBAAlB,EAAqC;MAACR,OAAO,EAAE;IAAV,CAArC,CA/BQ,EAgCR;MACEE,SAAS,EAAE,QADb;MAEEC,KAAK,EACH,kCACA,qBADA,GAEA,oBAFA,GAGA,wDANJ;MAOEC,SAAS,EAAE;IAPb,CAhCQ,EAyCR;MACED,KAAK,EAAE,IADT,CACc;;IADd,CAzCQ;EAtBL,CAAP;AAoED;;AAEDM,MAAM,CAACC,OAAP,GAAiBnB,KAAjB"},"metadata":{},"sourceType":"script"}