{"ast":null,"code":"'use strict';\n\nvar refractorSql = require('./sql.js');\n\nmodule.exports = apex;\napex.displayName = 'apex';\napex.aliases = [];\n\nfunction apex(Prism) {\n  Prism.register(refractorSql);\n\n  (function (Prism) {\n    var keywords = /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i;\n    var className = /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function () {\n      return keywords.source;\n    });\n    /** @param {string} pattern */\n\n    function insertClassName(pattern) {\n      return RegExp(pattern.replace(/<CLASS-NAME>/g, function () {\n        return className;\n      }), 'i');\n    }\n\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    };\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [{\n        pattern: insertClassName(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source),\n        lookbehind: true,\n        inside: classNameInside\n      }, {\n        // cast\n        pattern: insertClassName(/(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source),\n        lookbehind: true,\n        inside: classNameInside\n      }, {\n        // variable/parameter declaration and return types\n        pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n        inside: classNameInside\n      }],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator: /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["refractorSql","require","module","exports","apex","displayName","aliases","Prism","register","keywords","className","source","replace","insertClassName","pattern","RegExp","classNameInside","keyword","punctuation","languages","comment","clike","string","sql","lookbehind","greedy","alias","inside","annotation","trigger","function","boolean","number","operator"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/apex.js"],"sourcesContent":["'use strict'\r\nvar refractorSql = require('./sql.js')\r\nmodule.exports = apex\r\napex.displayName = 'apex'\r\napex.aliases = []\r\nfunction apex(Prism) {\r\n  Prism.register(refractorSql)\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\r\n    var className =\r\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\r\n        /<keyword>/g,\r\n        function () {\r\n          return keywords.source\r\n        }\r\n      )\r\n    /** @param {string} pattern */\r\n    function insertClassName(pattern) {\r\n      return RegExp(\r\n        pattern.replace(/<CLASS-NAME>/g, function () {\r\n          return className\r\n        }),\r\n        'i'\r\n      )\r\n    }\r\n    var classNameInside = {\r\n      keyword: keywords,\r\n      punctuation: /[()\\[\\]{};,:.<>]/\r\n    }\r\n    Prism.languages.apex = {\r\n      comment: Prism.languages.clike.comment,\r\n      string: Prism.languages.clike.string,\r\n      sql: {\r\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'language-sql',\r\n        inside: Prism.languages.sql\r\n      },\r\n      annotation: {\r\n        pattern: /@\\w+\\b/,\r\n        alias: 'punctuation'\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern: insertClassName(\r\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\r\n              .source\r\n          ),\r\n          lookbehind: true,\r\n          inside: classNameInside\r\n        },\r\n        {\r\n          // cast\r\n          pattern: insertClassName(\r\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\r\n          ),\r\n          lookbehind: true,\r\n          inside: classNameInside\r\n        },\r\n        {\r\n          // variable/parameter declaration and return types\r\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\r\n          inside: classNameInside\r\n        }\r\n      ],\r\n      trigger: {\r\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\r\n        lookbehind: true,\r\n        alias: 'class-name'\r\n      },\r\n      keyword: keywords,\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n      boolean: /\\b(?:false|true)\\b/i,\r\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\r\n      operator:\r\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\r\n      punctuation: /[()\\[\\]{};,.]/\r\n    }\r\n  })(Prism)\r\n}\r\n"],"mappings":"AAAA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA1B;;AACAC,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnBA,KAAK,CAACC,QAAN,CAAeR,YAAf;;EACC,CAAC,UAAUO,KAAV,EAAiB;IACjB,IAAIE,QAAQ,GACV,w2BADF;IAEA,IAAIC,SAAS,GACX,mIAAmIC,MAAnI,CAA0IC,OAA1I,CACE,YADF,EAEE,YAAY;MACV,OAAOH,QAAQ,CAACE,MAAhB;IACD,CAJH,CADF;IAOA;;IACA,SAASE,eAAT,CAAyBC,OAAzB,EAAkC;MAChC,OAAOC,MAAM,CACXD,OAAO,CAACF,OAAR,CAAgB,eAAhB,EAAiC,YAAY;QAC3C,OAAOF,SAAP;MACD,CAFD,CADW,EAIX,GAJW,CAAb;IAMD;;IACD,IAAIM,eAAe,GAAG;MACpBC,OAAO,EAAER,QADW;MAEpBS,WAAW,EAAE;IAFO,CAAtB;IAIAX,KAAK,CAACY,SAAN,CAAgBf,IAAhB,GAAuB;MACrBgB,OAAO,EAAEb,KAAK,CAACY,SAAN,CAAgBE,KAAhB,CAAsBD,OADV;MAErBE,MAAM,EAAEf,KAAK,CAACY,SAAN,CAAgBE,KAAhB,CAAsBC,MAFT;MAGrBC,GAAG,EAAE;QACHT,OAAO,EAAE,wCADN;QAEHU,UAAU,EAAE,IAFT;QAGHC,MAAM,EAAE,IAHL;QAIHC,KAAK,EAAE,cAJJ;QAKHC,MAAM,EAAEpB,KAAK,CAACY,SAAN,CAAgBI;MALrB,CAHgB;MAUrBK,UAAU,EAAE;QACVd,OAAO,EAAE,QADC;QAEVY,KAAK,EAAE;MAFG,CAVS;MAcrB,cAAc,CACZ;QACEZ,OAAO,EAAED,eAAe,CACtB,mGACGF,MAFmB,CAD1B;QAKEa,UAAU,EAAE,IALd;QAMEG,MAAM,EAAEX;MANV,CADY,EASZ;QACE;QACAF,OAAO,EAAED,eAAe,CACtB,uCAAuCF,MADjB,CAF1B;QAKEa,UAAU,EAAE,IALd;QAMEG,MAAM,EAAEX;MANV,CATY,EAiBZ;QACE;QACAF,OAAO,EAAED,eAAe,CAAC,qCAAqCF,MAAtC,CAF1B;QAGEgB,MAAM,EAAEX;MAHV,CAjBY,CAdO;MAqCrBa,OAAO,EAAE;QACPf,OAAO,EAAE,sBADF;QAEPU,UAAU,EAAE,IAFL;QAGPE,KAAK,EAAE;MAHA,CArCY;MA0CrBT,OAAO,EAAER,QA1CY;MA2CrBqB,QAAQ,EAAE,uBA3CW;MA4CrBC,OAAO,EAAE,qBA5CY;MA6CrBC,MAAM,EAAE,kCA7Ca;MA8CrBC,QAAQ,EACN,iEA/CmB;MAgDrBf,WAAW,EAAE;IAhDQ,CAAvB;EAkDD,CAzEA,EAyEEX,KAzEF;AA0EF"},"metadata":{},"sourceType":"script"}