{"ast":null,"code":"'use strict';\n\nmodule.exports = sass;\nsass.displayName = 'sass';\nsass.aliases = [];\n\nfunction sass(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    });\n    delete Prism.languages.sass.atrule;\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n    var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n      pattern: /(\\s)-(?=\\s)/,\n      lookbehind: true\n    }];\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [/[^:\\s]+(?=\\s*:)/, {\n            pattern: /(:)[^:\\s]+/,\n            lookbehind: true\n          }],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    });\n    delete Prism.languages.sass.property;\n    delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    });\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","sass","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","greedy","insertBefore","inside","atrule","variable","operator","punctuation","property","important","selector"],"sources":["/Users/aaronyeh/Downloads/Plant Buddy/node_modules/refractor/lang/sass.js"],"sourcesContent":["'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnB;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB,EAA8B;MACnD;MACAC,OAAO,EAAE;QACPC,OAAO,EAAE,+CADF;QAEPC,UAAU,EAAE,IAFL;QAGPC,MAAM,EAAE;MAHD;IAF0C,CAA9B,CAAvB;IAQAN,KAAK,CAACC,SAAN,CAAgBM,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;MAC7C;MACA,eAAe;QACb;QACAH,OAAO,EAAE,qBAFI;QAGbE,MAAM,EAAE,IAHK;QAIbE,MAAM,EAAE;UACNC,MAAM,EAAE;QADF;MAJK;IAF8B,CAA/C;IAWA,OAAOT,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqBY,MAA5B;IACA,IAAIC,QAAQ,GAAG,wBAAf;IACA,IAAIC,QAAQ,GAAG,CACb,0CADa,EAEb;MACEP,OAAO,EAAE,aADX;MAEEC,UAAU,EAAE;IAFd,CAFa,CAAf;IAOAL,KAAK,CAACC,SAAN,CAAgBM,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;MAC/C;MACA,iBAAiB;QACfH,OAAO,EAAE,cADM;QAEfE,MAAM,EAAE,IAFO;QAGfE,MAAM,EAAE;UACNI,WAAW,EAAE,GADP;UAENF,QAAQ,EAAEA,QAFJ;UAGNC,QAAQ,EAAEA;QAHJ;MAHO,CAF8B;MAW/C;MACA,iBAAiB;QACfP,OAAO,EAAE,oCADM;QAEfE,MAAM,EAAE,IAFO;QAGfE,MAAM,EAAE;UACNK,QAAQ,EAAE,CACR,iBADQ,EAER;YACET,OAAO,EAAE,YADX;YAEEC,UAAU,EAAE;UAFd,CAFQ,CADJ;UAQNO,WAAW,EAAE,GARP;UASNF,QAAQ,EAAEA,QATJ;UAUNC,QAAQ,EAAEA,QAVJ;UAWNG,SAAS,EAAEd,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqBiB;QAX1B;MAHO;IAZ8B,CAAjD;IA8BA,OAAOd,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqBgB,QAA5B;IACA,OAAOb,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqBiB,SAA5B,CA5DiB,CA4DqB;IACtC;;IACAd,KAAK,CAACC,SAAN,CAAgBM,YAAhB,CAA6B,MAA7B,EAAqC,aAArC,EAAoD;MAClDQ,QAAQ,EAAE;QACRX,OAAO,EACL,wHAFM;QAGRC,UAAU,EAAE,IAHJ;QAIRC,MAAM,EAAE;MAJA;IADwC,CAApD;EAQD,CAtEA,EAsEEN,KAtEF;AAuEF"},"metadata":{},"sourceType":"script"}