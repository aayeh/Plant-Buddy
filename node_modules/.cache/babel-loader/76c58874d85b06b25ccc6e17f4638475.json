{"ast":null,"code":"'use strict';\n\nvar refractorJava = require('./java.js');\n\nvar refractorJavadoclike = require('./javadoclike.js');\n\nmodule.exports = javadoc;\njavadoc.displayName = 'javadoc';\njavadoc.aliases = [];\n\nfunction javadoc(Prism) {\n  Prism.register(refractorJava);\n  Prism.register(refractorJavadoclike);\n\n  (function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m;\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n    var reference = /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () {\n      return memberReference;\n    });\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source + '(?:' + reference + ')'),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [{\n        pattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n        lookbehind: true,\n        inside: {\n          code: {\n            // there can't be any HTML inside of {@code} tags\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: Prism.languages.java,\n            alias: 'language-java'\n          }\n        }\n      }, {\n        pattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n        lookbehind: true,\n        inside: {\n          line: {\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: {\n              // highlight HTML tags and entities\n              tag: Prism.languages.markup.tag,\n              entity: Prism.languages.markup.entity,\n              code: {\n                // everything else is Java code\n                pattern: /.+/,\n                inside: Prism.languages.java,\n                alias: 'language-java'\n              }\n            }\n          }\n        }\n      }],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    });\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n  })(Prism);\n}","map":{"version":3,"names":["refractorJava","require","refractorJavadoclike","module","exports","javadoc","displayName","aliases","Prism","register","codeLinePattern","memberReference","source","reference","replace","languages","extend","insertBefore","pattern","RegExp","lookbehind","inside","function","field","namespace","punctuation","keyword","java","code","alias","line","tag","markup","entity","javadoclike","addSupport"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/javadoc.js"],"sourcesContent":["'use strict'\r\nvar refractorJava = require('./java.js')\r\nvar refractorJavadoclike = require('./javadoclike.js')\r\nmodule.exports = javadoc\r\njavadoc.displayName = 'javadoc'\r\njavadoc.aliases = []\r\nfunction javadoc(Prism) {\r\n  Prism.register(refractorJava)\r\n  Prism.register(refractorJavadoclike)\r\n  ;(function (Prism) {\r\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\r\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\r\n    var reference =\r\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\r\n        /<mem>/g,\r\n        function () {\r\n          return memberReference\r\n        }\r\n      )\r\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\r\n    Prism.languages.insertBefore('javadoc', 'keyword', {\r\n      reference: {\r\n        pattern: RegExp(\r\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\r\n            .source +\r\n            '(?:' +\r\n            reference +\r\n            ')'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          function: {\r\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\r\n            lookbehind: true\r\n          },\r\n          field: {\r\n            pattern: /(#\\s*)\\w+/,\r\n            lookbehind: true\r\n          },\r\n          namespace: {\r\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\r\n            inside: {\r\n              punctuation: /\\./\r\n            }\r\n          },\r\n          'class-name': /\\b[A-Z]\\w*/,\r\n          keyword: Prism.languages.java.keyword,\r\n          punctuation: /[#()[\\],.]/\r\n        }\r\n      },\r\n      'class-name': {\r\n        // @param <T> the first generic type parameter\r\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /[.<>]/\r\n        }\r\n      },\r\n      'code-section': [\r\n        {\r\n          pattern:\r\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\r\n          lookbehind: true,\r\n          inside: {\r\n            code: {\r\n              // there can't be any HTML inside of {@code} tags\r\n              pattern: codeLinePattern,\r\n              lookbehind: true,\r\n              inside: Prism.languages.java,\r\n              alias: 'language-java'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            line: {\r\n              pattern: codeLinePattern,\r\n              lookbehind: true,\r\n              inside: {\r\n                // highlight HTML tags and entities\r\n                tag: Prism.languages.markup.tag,\r\n                entity: Prism.languages.markup.entity,\r\n                code: {\r\n                  // everything else is Java code\r\n                  pattern: /.+/,\r\n                  inside: Prism.languages.java,\r\n                  alias: 'language-java'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tag: Prism.languages.markup.tag,\r\n      entity: Prism.languages.markup.entity\r\n    })\r\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\r\n  })(Prism)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}