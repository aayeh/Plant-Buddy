{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\n  id: PropTypes.any,\n\n  /**\r\n   * Accessible label for the toggle; the value of `title` if not specified.\r\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\nvar SplitButton = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Button","ButtonGroup","Dropdown","propTypes","id","any","toggleLabel","string","href","target","onClick","func","title","node","isRequired","type","disabled","bool","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","variant","size","defaultProps","SplitButton","forwardRef","_ref","ref","children","props","createElement","as","Toggle","split","childBsPrefix","className","Menu","role","renderOnMount","displayName"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/react-bootstrap/esm/SplitButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport ButtonGroup from './ButtonGroup';\r\nimport Dropdown from './Dropdown';\r\nvar propTypes = {\r\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\r\n  id: PropTypes.any,\r\n\r\n  /**\r\n   * Accessible label for the toggle; the value of `title` if not specified.\r\n   */\r\n  toggleLabel: PropTypes.string,\r\n\r\n  /** An `href` passed to the non-toggle Button */\r\n  href: PropTypes.string,\r\n\r\n  /** An anchor `target` passed to the non-toggle Button */\r\n  target: PropTypes.string,\r\n\r\n  /** An `onClick` handler passed to the non-toggle Button */\r\n  onClick: PropTypes.func,\r\n\r\n  /** The content of the non-toggle Button.  */\r\n  title: PropTypes.node.isRequired,\r\n\r\n  /** A `type` passed to the non-toggle Button */\r\n  type: PropTypes.string,\r\n\r\n  /** Disables both Buttons  */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\r\n  menuRole: PropTypes.string,\r\n\r\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\r\n  renderMenuOnMount: PropTypes.bool,\r\n\r\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\r\n  rootCloseEvent: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  bsPrefix: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  variant: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  size: PropTypes.string\r\n};\r\nvar defaultProps = {\r\n  toggleLabel: 'Toggle dropdown',\r\n  type: 'button'\r\n};\r\nvar SplitButton = React.forwardRef(function (_ref, ref) {\r\n  var id = _ref.id,\r\n      bsPrefix = _ref.bsPrefix,\r\n      size = _ref.size,\r\n      variant = _ref.variant,\r\n      title = _ref.title,\r\n      type = _ref.type,\r\n      toggleLabel = _ref.toggleLabel,\r\n      children = _ref.children,\r\n      onClick = _ref.onClick,\r\n      href = _ref.href,\r\n      target = _ref.target,\r\n      menuRole = _ref.menuRole,\r\n      renderMenuOnMount = _ref.renderMenuOnMount,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    as: ButtonGroup\r\n  }), /*#__PURE__*/React.createElement(Button, {\r\n    size: size,\r\n    variant: variant,\r\n    disabled: props.disabled,\r\n    bsPrefix: bsPrefix,\r\n    href: href,\r\n    target: target,\r\n    onClick: onClick,\r\n    type: type\r\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\r\n    split: true,\r\n    id: id,\r\n    size: size,\r\n    variant: variant,\r\n    disabled: props.disabled,\r\n    childBsPrefix: bsPrefix\r\n  }, /*#__PURE__*/React.createElement(\"span\", {\r\n    className: \"sr-only\"\r\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    renderOnMount: renderMenuOnMount,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nSplitButton.propTypes = propTypes;\r\nSplitButton.defaultProps = defaultProps;\r\nSplitButton.displayName = 'SplitButton';\r\nexport default SplitButton;"],"mappings":"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"},"metadata":{},"sourceType":"module"}