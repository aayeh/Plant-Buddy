{"ast":null,"code":"/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\n\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\r\nLanguage: Fortran\r\nAuthor: Anthony Scemama <scemama@irsamc.ups-tlse.fr>\r\nWebsite: https://en.wikipedia.org/wiki/Fortran\r\nCategory: scientific\r\n*/\n\n/** @type LanguageFn */\n\n\nfunction fortran(hljs) {\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n  const COMMENT = {\n    variants: [hljs.COMMENT('!', '$', {\n      relevance: 0\n    }), // allow FORTRAN 77 style comments\n    hljs.COMMENT('^C[ ]', '$', {\n      relevance: 0\n    }), hljs.COMMENT('^C$', '$', {\n      relevance: 0\n    })]\n  }; // regex in both fortran and irpf90 should match\n\n  const OPTIONAL_NUMBER_SUFFIX = /(_[a-z_\\d]+)?/;\n  const OPTIONAL_NUMBER_EXP = /([de][+-]?\\d+)?/;\n  const NUMBER = {\n    className: 'number',\n    variants: [{\n      begin: concat(/\\b\\d+/, /\\.(\\d*)/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n    }, {\n      begin: concat(/\\b\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n    }, {\n      begin: concat(/\\.\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n    }],\n    relevance: 0\n  };\n  const FUNCTION_DEF = {\n    className: 'function',\n    beginKeywords: 'subroutine function program',\n    illegal: '[${=\\\\n]',\n    contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n  };\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n  };\n  const KEYWORDS = {\n    literal: '.False. .True.',\n    keyword: 'kind do concurrent local shared while private call intrinsic where elsewhere ' + 'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then block endblock endassociate ' + 'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' + 'goto save else use module select case ' + 'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' + 'continue format pause cycle exit ' + 'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' + 'synchronous nopass non_overridable pass protected volatile abstract extends import ' + 'non_intrinsic value deferred generic final enumerator class associate bind enum ' + 'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' + 'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' + 'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' + 'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' + 'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' + 'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' + 'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' + 'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure impure ' + 'integer real character complex logical codimension dimension allocatable|10 parameter ' + 'external implicit|10 none double precision assign intent optional pointer ' + 'target in out common equivalence data',\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' + 'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' + 'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' + 'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' + 'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' + 'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' + 'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' + 'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' + 'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' + 'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' + 'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' + 'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' + 'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' + 'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of ' + 'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' + 'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' + 'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' + 'num_images parity popcnt poppar shifta shiftl shiftr this_image sync change team co_broadcast co_max co_min co_sum co_reduce'\n  };\n  return {\n    name: 'Fortran',\n    case_insensitive: true,\n    aliases: ['f90', 'f95'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [STRING, FUNCTION_DEF, // allow `C = value` for assignments so they aren't misdetected\n    // as Fortran 77 style comments\n    {\n      begin: /^C\\s*=(?!=)/,\n      relevance: 0\n    }, COMMENT, NUMBER]\n  };\n}\n\nmodule.exports = fortran;","map":{"version":3,"names":["source","re","concat","args","joined","map","x","join","fortran","hljs","PARAMS","className","begin","end","COMMENT","variants","relevance","OPTIONAL_NUMBER_SUFFIX","OPTIONAL_NUMBER_EXP","NUMBER","FUNCTION_DEF","beginKeywords","illegal","contains","UNDERSCORE_TITLE_MODE","STRING","APOS_STRING_MODE","QUOTE_STRING_MODE","KEYWORDS","literal","keyword","built_in","name","case_insensitive","aliases","keywords","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/fortran.js"],"sourcesContent":["/**\r\n * @param {string} value\r\n * @returns {RegExp}\r\n * */\r\n\r\n/**\r\n * @param {RegExp | string } re\r\n * @returns {string}\r\n */\r\nfunction source(re) {\r\n  if (!re) return null;\r\n  if (typeof re === \"string\") return re;\r\n\r\n  return re.source;\r\n}\r\n\r\n/**\r\n * @param {...(RegExp | string) } args\r\n * @returns {string}\r\n */\r\nfunction concat(...args) {\r\n  const joined = args.map((x) => source(x)).join(\"\");\r\n  return joined;\r\n}\r\n\r\n/*\r\nLanguage: Fortran\r\nAuthor: Anthony Scemama <scemama@irsamc.ups-tlse.fr>\r\nWebsite: https://en.wikipedia.org/wiki/Fortran\r\nCategory: scientific\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction fortran(hljs) {\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: '\\\\(',\r\n    end: '\\\\)'\r\n  };\r\n\r\n  const COMMENT = {\r\n    variants: [\r\n      hljs.COMMENT('!', '$', {\r\n        relevance: 0\r\n      }),\r\n      // allow FORTRAN 77 style comments\r\n      hljs.COMMENT('^C[ ]', '$', {\r\n        relevance: 0\r\n      }),\r\n      hljs.COMMENT('^C$', '$', {\r\n        relevance: 0\r\n      })\r\n    ]\r\n  };\r\n\r\n  // regex in both fortran and irpf90 should match\r\n  const OPTIONAL_NUMBER_SUFFIX = /(_[a-z_\\d]+)?/;\r\n  const OPTIONAL_NUMBER_EXP = /([de][+-]?\\d+)?/;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      {\r\n        begin: concat(/\\b\\d+/, /\\.(\\d*)/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      },\r\n      {\r\n        begin: concat(/\\b\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      },\r\n      {\r\n        begin: concat(/\\.\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\r\n      }\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const FUNCTION_DEF = {\r\n    className: 'function',\r\n    beginKeywords: 'subroutine function program',\r\n    illegal: '[${=\\\\n]',\r\n    contains: [\r\n      hljs.UNDERSCORE_TITLE_MODE,\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    relevance: 0,\r\n    variants: [\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE\r\n    ]\r\n  };\r\n\r\n  const KEYWORDS = {\r\n    literal: '.False. .True.',\r\n    keyword: 'kind do concurrent local shared while private call intrinsic where elsewhere ' +\r\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then block endblock endassociate ' +\r\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\r\n      'goto save else use module select case ' +\r\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\r\n      'continue format pause cycle exit ' +\r\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\r\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\r\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\r\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\r\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\r\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\r\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\r\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\r\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\r\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +\r\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure impure ' +\r\n      'integer real character complex logical codimension dimension allocatable|10 parameter ' +\r\n      'external implicit|10 none double precision assign intent optional pointer ' +\r\n      'target in out common equivalence data',\r\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\r\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\r\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\r\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\r\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\r\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\r\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\r\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\r\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\r\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\r\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\r\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\r\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\r\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of ' +\r\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\r\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\r\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\r\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image sync change team co_broadcast co_max co_min co_sum co_reduce'\r\n  };\r\n  return {\r\n    name: 'Fortran',\r\n    case_insensitive: true,\r\n    aliases: [\r\n      'f90',\r\n      'f95'\r\n    ],\r\n    keywords: KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: [\r\n      STRING,\r\n      FUNCTION_DEF,\r\n      // allow `C = value` for assignments so they aren't misdetected\r\n      // as Fortran 77 style comments\r\n      {\r\n        begin: /^C\\s*=(?!=)/,\r\n        relevance: 0\r\n      },\r\n      COMMENT,\r\n      NUMBER\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = fortran;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}