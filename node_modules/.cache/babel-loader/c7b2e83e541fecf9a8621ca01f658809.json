{"ast":null,"code":"'use strict';\n\nmodule.exports = tremor;\ntremor.displayName = 'tremor';\ntremor.aliases = [];\n\nfunction tremor(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    };\n    var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(/(^|[^\\\\])/.source + '(?:' + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"\"\"' + '|' + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"' + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    };\n    Prism.languages.troy = Prism.languages['tremor'];\n    Prism.languages.trickle = Prism.languages['tremor'];\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","tremor","displayName","aliases","Prism","languages","comment","pattern","lookbehind","extractor","greedy","inside","regex","function","value","identifier","keyword","boolean","number","alias","operator","punctuation","interpolationPattern","source","RegExp","interpolation","expression","string","troy","trickle"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/tremor.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = tremor\r\ntremor.displayName = 'tremor'\r\ntremor.aliases = []\r\nfunction tremor(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.tremor = {\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n      },\r\n      'interpolated-string': null,\r\n      // see below\r\n      extractor: {\r\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\r\n        greedy: true,\r\n        inside: {\r\n          regex: {\r\n            pattern: /(^re)\\|[\\s\\S]+/,\r\n            lookbehind: true\r\n          },\r\n          function: /^\\w+/,\r\n          value: /\\|[\\s\\S]+/\r\n        }\r\n      },\r\n      identifier: {\r\n        pattern: /`[^`]*`/,\r\n        greedy: true\r\n      },\r\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\r\n      keyword:\r\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\r\n      boolean: /\\b(?:false|null|true)\\b/i,\r\n      number:\r\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\r\n      'pattern-punctuation': {\r\n        pattern: /%(?=[({[])/,\r\n        alias: 'punctuation'\r\n      },\r\n      operator:\r\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\r\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\r\n    }\r\n    var interpolationPattern =\r\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\r\n    Prism.languages.tremor['interpolated-string'] = {\r\n      pattern: RegExp(\r\n        /(^|[^\\\\])/.source +\r\n          '(?:' +\r\n          '\"\"\"(?:' +\r\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\r\n          '|' +\r\n          interpolationPattern +\r\n          ')*\"\"\"' +\r\n          '|' +\r\n          '\"(?:' +\r\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\r\n          '|' +\r\n          interpolationPattern +\r\n          ')*\"' +\r\n          ')'\r\n      ),\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: RegExp(interpolationPattern),\r\n          inside: {\r\n            punctuation: /^#\\{|\\}$/,\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: Prism.languages.tremor\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n    Prism.languages.troy = Prism.languages['tremor']\r\n    Prism.languages.trickle = Prism.languages['tremor']\r\n  })(Prism)\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACrB;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;MACvBK,OAAO,EAAE;QACPC,OAAO,EAAE,+CADF;QAEPC,UAAU,EAAE;MAFL,CADc;MAKvB,uBAAuB,IALA;MAMvB;MACAC,SAAS,EAAE;QACTF,OAAO,EAAE,mDADA;QAETG,MAAM,EAAE,IAFC;QAGTC,MAAM,EAAE;UACNC,KAAK,EAAE;YACLL,OAAO,EAAE,gBADJ;YAELC,UAAU,EAAE;UAFP,CADD;UAKNK,QAAQ,EAAE,MALJ;UAMNC,KAAK,EAAE;QAND;MAHC,CAPY;MAmBvBC,UAAU,EAAE;QACVR,OAAO,EAAE,SADC;QAEVG,MAAM,EAAE;MAFE,CAnBW;MAuBvBG,QAAQ,EAAE,mCAvBa;MAwBvBG,OAAO,EACL,kUAzBqB;MA0BvBC,OAAO,EAAE,0BA1Bc;MA2BvBC,MAAM,EACJ,8EA5BqB;MA6BvB,uBAAuB;QACrBX,OAAO,EAAE,YADY;QAErBY,KAAK,EAAE;MAFc,CA7BA;MAiCvBC,QAAQ,EACN,uFAlCqB;MAmCvBC,WAAW,EAAE;IAnCU,CAAzB;IAqCA,IAAIC,oBAAoB,GACtB,kEAAkEC,MADpE;IAEAnB,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,qBAAvB,IAAgD;MAC9CM,OAAO,EAAEiB,MAAM,CACb,YAAYD,MAAZ,GACE,KADF,GAEE,QAFF,GAGE,mCAAmCA,MAHrC,GAIE,GAJF,GAKED,oBALF,GAME,OANF,GAOE,GAPF,GAQE,MARF,GASE,wCAAwCC,MAT1C,GAUE,GAVF,GAWED,oBAXF,GAYE,KAZF,GAaE,GAdW,CAD+B;MAiB9Cd,UAAU,EAAE,IAjBkC;MAkB9CE,MAAM,EAAE,IAlBsC;MAmB9CC,MAAM,EAAE;QACNc,aAAa,EAAE;UACblB,OAAO,EAAEiB,MAAM,CAACF,oBAAD,CADF;UAEbX,MAAM,EAAE;YACNU,WAAW,EAAE,UADP;YAENK,UAAU,EAAE;cACVnB,OAAO,EAAE,SADC;cAEVI,MAAM,EAAEP,KAAK,CAACC,SAAN,CAAgBJ;YAFd;UAFN;QAFK,CADT;QAWN0B,MAAM,EAAE;MAXF;IAnBsC,CAAhD;IAiCAvB,KAAK,CAACC,SAAN,CAAgBuB,IAAhB,GAAuBxB,KAAK,CAACC,SAAN,CAAgB,QAAhB,CAAvB;IACAD,KAAK,CAACC,SAAN,CAAgBwB,OAAhB,GAA0BzB,KAAK,CAACC,SAAN,CAAgB,QAAhB,CAA1B;EACD,CA3EA,EA2EED,KA3EF;AA4EF"},"metadata":{},"sourceType":"script"}