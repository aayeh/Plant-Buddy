{"ast":null,"code":"'use strict';\n\nvar high = require('highlight.js/lib/core');\n\nvar fault = require('fault');\n\nexports.highlight = highlight;\nexports.highlightAuto = highlightAuto;\nexports.registerLanguage = registerLanguage;\nexports.listLanguages = listLanguages;\nexports.registerAlias = registerAlias;\nEmitter.prototype.addText = text;\nEmitter.prototype.addKeyword = addKeyword;\nEmitter.prototype.addSublanguage = addSublanguage;\nEmitter.prototype.openNode = open;\nEmitter.prototype.closeNode = close;\nEmitter.prototype.closeAllNodes = noop;\nEmitter.prototype.finalize = noop;\nEmitter.prototype.toHTML = toHtmlNoop;\nvar defaultPrefix = 'hljs-'; // Highlighting `value` in the language `name`.\n\nfunction highlight(name, value, options) {\n  var before = high.configure({});\n  var settings = options || {};\n  var prefix = settings.prefix;\n  var result;\n\n  if (typeof name !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', name);\n  }\n\n  if (!high.getLanguage(name)) {\n    throw fault('Unknown language: `%s` is not registered', name);\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value);\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix;\n  }\n\n  high.configure({\n    __emitter: Emitter,\n    classPrefix: prefix\n  });\n  result = high.highlight(value, {\n    language: name,\n    ignoreIllegals: true\n  });\n  high.configure(before || {});\n  /* istanbul ignore if - Highlight.js seems to use this (currently) for broken\r\n   * grammars, so let’s keep it in there just to be sure. */\n\n  if (result.errorRaised) {\n    throw result.errorRaised;\n  }\n\n  return {\n    relevance: result.relevance,\n    language: result.language,\n    value: result.emitter.rootNode.children\n  };\n}\n\nfunction highlightAuto(value, options) {\n  var settings = options || {};\n  var subset = settings.subset || high.listLanguages();\n  var prefix = settings.prefix;\n  var length = subset.length;\n  var index = -1;\n  var result;\n  var secondBest;\n  var current;\n  var name;\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix;\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value);\n  }\n\n  secondBest = {\n    relevance: 0,\n    language: null,\n    value: []\n  };\n  result = {\n    relevance: 0,\n    language: null,\n    value: []\n  };\n\n  while (++index < length) {\n    name = subset[index];\n\n    if (!high.getLanguage(name)) {\n      continue;\n    }\n\n    current = highlight(name, value, options);\n    current.language = name;\n\n    if (current.relevance > secondBest.relevance) {\n      secondBest = current;\n    }\n\n    if (current.relevance > result.relevance) {\n      secondBest = result;\n      result = current;\n    }\n  }\n\n  if (secondBest.language) {\n    result.secondBest = secondBest;\n  }\n\n  return result;\n} // Register a language.\n\n\nfunction registerLanguage(name, syntax) {\n  high.registerLanguage(name, syntax);\n} // Get a list of all registered languages.\n\n\nfunction listLanguages() {\n  return high.listLanguages();\n} // Register more aliases for an already registered language.\n\n\nfunction registerAlias(name, alias) {\n  var map = name;\n  var key;\n\n  if (alias) {\n    map = {};\n    map[name] = alias;\n  }\n\n  for (key in map) {\n    high.registerAliases(map[key], {\n      languageName: key\n    });\n  }\n}\n\nfunction Emitter(options) {\n  this.options = options;\n  this.rootNode = {\n    children: []\n  };\n  this.stack = [this.rootNode];\n}\n\nfunction addKeyword(value, name) {\n  this.openNode(name);\n  this.addText(value);\n  this.closeNode();\n}\n\nfunction addSublanguage(other, name) {\n  var stack = this.stack;\n  var current = stack[stack.length - 1];\n  var results = other.rootNode.children;\n  var node = name ? {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      className: [name]\n    },\n    children: results\n  } : results;\n  current.children = current.children.concat(node);\n}\n\nfunction text(value) {\n  var stack = this.stack;\n  var current;\n  var tail;\n  if (value === '') return;\n  current = stack[stack.length - 1];\n  tail = current.children[current.children.length - 1];\n\n  if (tail && tail.type === 'text') {\n    tail.value += value;\n  } else {\n    current.children.push({\n      type: 'text',\n      value: value\n    });\n  }\n}\n\nfunction open(name) {\n  var stack = this.stack;\n  var className = this.options.classPrefix + name;\n  var current = stack[stack.length - 1];\n  var child = {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      className: [className]\n    },\n    children: []\n  };\n  current.children.push(child);\n  stack.push(child);\n}\n\nfunction close() {\n  this.stack.pop();\n}\n\nfunction toHtmlNoop() {\n  return '';\n}\n\nfunction noop() {}","map":{"version":3,"names":["high","require","fault","exports","highlight","highlightAuto","registerLanguage","listLanguages","registerAlias","Emitter","prototype","addText","text","addKeyword","addSublanguage","openNode","open","closeNode","close","closeAllNodes","noop","finalize","toHTML","toHtmlNoop","defaultPrefix","name","value","options","before","configure","settings","prefix","result","getLanguage","undefined","__emitter","classPrefix","language","ignoreIllegals","errorRaised","relevance","emitter","rootNode","children","subset","length","index","secondBest","current","syntax","alias","map","key","registerAliases","languageName","stack","other","results","node","type","tagName","properties","className","concat","tail","push","child","pop"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/lowlight/lib/core.js"],"sourcesContent":["'use strict'\r\n\r\nvar high = require('highlight.js/lib/core')\r\nvar fault = require('fault')\r\n\r\nexports.highlight = highlight\r\nexports.highlightAuto = highlightAuto\r\nexports.registerLanguage = registerLanguage\r\nexports.listLanguages = listLanguages\r\nexports.registerAlias = registerAlias\r\n\r\nEmitter.prototype.addText = text\r\nEmitter.prototype.addKeyword = addKeyword\r\nEmitter.prototype.addSublanguage = addSublanguage\r\nEmitter.prototype.openNode = open\r\nEmitter.prototype.closeNode = close\r\nEmitter.prototype.closeAllNodes = noop\r\nEmitter.prototype.finalize = noop\r\nEmitter.prototype.toHTML = toHtmlNoop\r\n\r\nvar defaultPrefix = 'hljs-'\r\n\r\n// Highlighting `value` in the language `name`.\r\nfunction highlight(name, value, options) {\r\n  var before = high.configure({})\r\n  var settings = options || {}\r\n  var prefix = settings.prefix\r\n  var result\r\n\r\n  if (typeof name !== 'string') {\r\n    throw fault('Expected `string` for name, got `%s`', name)\r\n  }\r\n\r\n  if (!high.getLanguage(name)) {\r\n    throw fault('Unknown language: `%s` is not registered', name)\r\n  }\r\n\r\n  if (typeof value !== 'string') {\r\n    throw fault('Expected `string` for value, got `%s`', value)\r\n  }\r\n\r\n  if (prefix === null || prefix === undefined) {\r\n    prefix = defaultPrefix\r\n  }\r\n\r\n  high.configure({__emitter: Emitter, classPrefix: prefix})\r\n\r\n  result = high.highlight(value, {language: name, ignoreIllegals: true})\r\n\r\n  high.configure(before || {})\r\n\r\n  /* istanbul ignore if - Highlight.js seems to use this (currently) for broken\r\n   * grammars, so let’s keep it in there just to be sure. */\r\n  if (result.errorRaised) {\r\n    throw result.errorRaised\r\n  }\r\n\r\n  return {\r\n    relevance: result.relevance,\r\n    language: result.language,\r\n    value: result.emitter.rootNode.children\r\n  }\r\n}\r\n\r\nfunction highlightAuto(value, options) {\r\n  var settings = options || {}\r\n  var subset = settings.subset || high.listLanguages()\r\n  var prefix = settings.prefix\r\n  var length = subset.length\r\n  var index = -1\r\n  var result\r\n  var secondBest\r\n  var current\r\n  var name\r\n\r\n  if (prefix === null || prefix === undefined) {\r\n    prefix = defaultPrefix\r\n  }\r\n\r\n  if (typeof value !== 'string') {\r\n    throw fault('Expected `string` for value, got `%s`', value)\r\n  }\r\n\r\n  secondBest = {relevance: 0, language: null, value: []}\r\n  result = {relevance: 0, language: null, value: []}\r\n\r\n  while (++index < length) {\r\n    name = subset[index]\r\n\r\n    if (!high.getLanguage(name)) {\r\n      continue\r\n    }\r\n\r\n    current = highlight(name, value, options)\r\n    current.language = name\r\n\r\n    if (current.relevance > secondBest.relevance) {\r\n      secondBest = current\r\n    }\r\n\r\n    if (current.relevance > result.relevance) {\r\n      secondBest = result\r\n      result = current\r\n    }\r\n  }\r\n\r\n  if (secondBest.language) {\r\n    result.secondBest = secondBest\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Register a language.\r\nfunction registerLanguage(name, syntax) {\r\n  high.registerLanguage(name, syntax)\r\n}\r\n\r\n// Get a list of all registered languages.\r\nfunction listLanguages() {\r\n  return high.listLanguages()\r\n}\r\n\r\n// Register more aliases for an already registered language.\r\nfunction registerAlias(name, alias) {\r\n  var map = name\r\n  var key\r\n\r\n  if (alias) {\r\n    map = {}\r\n    map[name] = alias\r\n  }\r\n\r\n  for (key in map) {\r\n    high.registerAliases(map[key], {languageName: key})\r\n  }\r\n}\r\n\r\nfunction Emitter(options) {\r\n  this.options = options\r\n  this.rootNode = {children: []}\r\n  this.stack = [this.rootNode]\r\n}\r\n\r\nfunction addKeyword(value, name) {\r\n  this.openNode(name)\r\n  this.addText(value)\r\n  this.closeNode()\r\n}\r\n\r\nfunction addSublanguage(other, name) {\r\n  var stack = this.stack\r\n  var current = stack[stack.length - 1]\r\n  var results = other.rootNode.children\r\n  var node = name\r\n    ? {\r\n        type: 'element',\r\n        tagName: 'span',\r\n        properties: {className: [name]},\r\n        children: results\r\n      }\r\n    : results\r\n\r\n  current.children = current.children.concat(node)\r\n}\r\n\r\nfunction text(value) {\r\n  var stack = this.stack\r\n  var current\r\n  var tail\r\n\r\n  if (value === '') return\r\n\r\n  current = stack[stack.length - 1]\r\n  tail = current.children[current.children.length - 1]\r\n\r\n  if (tail && tail.type === 'text') {\r\n    tail.value += value\r\n  } else {\r\n    current.children.push({type: 'text', value: value})\r\n  }\r\n}\r\n\r\nfunction open(name) {\r\n  var stack = this.stack\r\n  var className = this.options.classPrefix + name\r\n  var current = stack[stack.length - 1]\r\n  var child = {\r\n    type: 'element',\r\n    tagName: 'span',\r\n    properties: {className: [className]},\r\n    children: []\r\n  }\r\n\r\n  current.children.push(child)\r\n  stack.push(child)\r\n}\r\n\r\nfunction close() {\r\n  this.stack.pop()\r\n}\r\n\r\nfunction toHtmlNoop() {\r\n  return ''\r\n}\r\n\r\nfunction noop() {}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}