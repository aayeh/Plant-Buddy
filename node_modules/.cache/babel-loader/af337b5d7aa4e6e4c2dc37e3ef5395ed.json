{"ast":null,"code":"'use strict';\n\nmodule.exports = gdscript;\ngdscript.displayName = 'gdscript';\ngdscript.aliases = [];\n\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern: /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern: /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword: /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [/\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/, /\\b(?:INF|NAN|PI|TAU)\\b/],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  };\n}","map":{"version":3,"names":["module","exports","gdscript","displayName","aliases","Prism","languages","comment","string","pattern","greedy","lookbehind","keyword","function","variable","number","constant","boolean","operator","punctuation"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/gdscript.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = gdscript\r\ngdscript.displayName = 'gdscript'\r\ngdscript.aliases = []\r\nfunction gdscript(Prism) {\r\n  Prism.languages.gdscript = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern:\r\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      // class_name Foo, extends Bar, class InnerClass\r\n      // export(int) var baz, export(int, 0) var i\r\n      // as Node\r\n      // const FOO: int = 9, var bar: bool = true\r\n      // func add(reference: Item, amount: int) -> Item:\r\n      pattern:\r\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\r\n    variable: /\\$\\w+/,\r\n    number: [\r\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\r\n      /\\b(?:INF|NAN|PI|TAU)\\b/\r\n    ],\r\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\r\n    punctuation: /[.:,;()[\\]{}]/\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;EACvBA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2B;IACzBK,OAAO,EAAE,KADgB;IAEzBC,MAAM,EAAE;MACNC,OAAO,EACL,4EAFI;MAGNC,MAAM,EAAE;IAHF,CAFiB;IAOzB,cAAc;MACZ;MACA;MACA;MACA;MACA;MACAD,OAAO,EACL,4IAPU;MAQZE,UAAU,EAAE;IARA,CAPW;IAiBzBC,OAAO,EACL,2QAlBuB;IAmBzBC,QAAQ,EAAE,0BAnBe;IAoBzBC,QAAQ,EAAE,OApBe;IAqBzBC,MAAM,EAAE,CACN,2FADM,EAEN,wBAFM,CArBiB;IAyBzBC,QAAQ,EAAE,oBAzBe;IA0BzBC,OAAO,EAAE,oBA1BgB;IA2BzBC,QAAQ,EAAE,0CA3Be;IA4BzBC,WAAW,EAAE;EA5BY,CAA3B;AA8BD"},"metadata":{},"sourceType":"script"}