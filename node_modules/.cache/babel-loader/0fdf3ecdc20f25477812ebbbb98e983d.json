{"ast":null,"code":"/*\r\nLanguage: Ceylon\r\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\r\nWebsite: https://ceylon-lang.org\r\n*/\n\n/** @type LanguageFn */\nfunction ceylon(hljs) {\n  // 2.3. Identifiers and keywords\n  const KEYWORDS = 'assembly module package import alias class interface object given value ' + 'assign void function new of extends satisfies abstracts in out return ' + 'break continue throw assert dynamic if else switch case for while try ' + 'catch finally then let this outer super is exists nonempty'; // 7.4.1 Declaration Modifiers\n\n  const DECLARATION_MODIFIERS = 'shared abstract formal default actual variable late native deprecated ' + 'final sealed annotation suppressWarnings small'; // 7.4.2 Documentation\n\n  const DOCUMENTATION = 'doc by license see throws tagged';\n  const SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  const EXPRESSIONS = [{\n    // verbatim string\n    className: 'string',\n    begin: '\"\"\"',\n    end: '\"\"\"',\n    relevance: 10\n  }, {\n    // string literal or template\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [SUBST]\n  }, {\n    // character literal\n    className: 'string',\n    begin: \"'\",\n    end: \"'\"\n  }, {\n    // numeric literal\n    className: 'number',\n    begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n    relevance: 0\n  }];\n  SUBST.contains = EXPRESSIONS;\n  return {\n    name: 'Ceylon',\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT('/\\\\*', '\\\\*/', {\n      contains: ['self']\n    }), {\n      // compiler annotation\n      className: 'meta',\n      begin: '@[a-z]\\\\w*(?::\"[^\"]*\")?'\n    }].concat(EXPRESSIONS)\n  };\n}\n\nmodule.exports = ceylon;","map":{"version":3,"names":["ceylon","hljs","KEYWORDS","DECLARATION_MODIFIERS","DOCUMENTATION","SUBST","className","excludeBegin","excludeEnd","begin","end","keywords","relevance","EXPRESSIONS","contains","name","keyword","meta","illegal","C_LINE_COMMENT_MODE","COMMENT","concat","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/ceylon.js"],"sourcesContent":["/*\r\nLanguage: Ceylon\r\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\r\nWebsite: https://ceylon-lang.org\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction ceylon(hljs) {\r\n  // 2.3. Identifiers and keywords\r\n  const KEYWORDS =\r\n    'assembly module package import alias class interface object given value ' +\r\n    'assign void function new of extends satisfies abstracts in out return ' +\r\n    'break continue throw assert dynamic if else switch case for while try ' +\r\n    'catch finally then let this outer super is exists nonempty';\r\n  // 7.4.1 Declaration Modifiers\r\n  const DECLARATION_MODIFIERS =\r\n    'shared abstract formal default actual variable late native deprecated ' +\r\n    'final sealed annotation suppressWarnings small';\r\n  // 7.4.2 Documentation\r\n  const DOCUMENTATION =\r\n    'doc by license see throws tagged';\r\n  const SUBST = {\r\n    className: 'subst',\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n    begin: /``/,\r\n    end: /``/,\r\n    keywords: KEYWORDS,\r\n    relevance: 10\r\n  };\r\n  const EXPRESSIONS = [\r\n    {\r\n      // verbatim string\r\n      className: 'string',\r\n      begin: '\"\"\"',\r\n      end: '\"\"\"',\r\n      relevance: 10\r\n    },\r\n    {\r\n      // string literal or template\r\n      className: 'string',\r\n      begin: '\"',\r\n      end: '\"',\r\n      contains: [SUBST]\r\n    },\r\n    {\r\n      // character literal\r\n      className: 'string',\r\n      begin: \"'\",\r\n      end: \"'\"\r\n    },\r\n    {\r\n      // numeric literal\r\n      className: 'number',\r\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\r\n      relevance: 0\r\n    }\r\n  ];\r\n  SUBST.contains = EXPRESSIONS;\r\n\r\n  return {\r\n    name: 'Ceylon',\r\n    keywords: {\r\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\r\n      meta: DOCUMENTATION\r\n    },\r\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\r\n    contains: [\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\r\n        contains: ['self']\r\n      }),\r\n      {\r\n        // compiler annotation\r\n        className: 'meta',\r\n        begin: '@[a-z]\\\\w*(?::\"[^\"]*\")?'\r\n      }\r\n    ].concat(EXPRESSIONS)\r\n  };\r\n}\r\n\r\nmodule.exports = ceylon;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;EACpB;EACA,MAAMC,QAAQ,GACZ,6EACA,wEADA,GAEA,wEAFA,GAGA,4DAJF,CAFoB,CAOpB;;EACA,MAAMC,qBAAqB,GACzB,2EACA,gDAFF,CARoB,CAWpB;;EACA,MAAMC,aAAa,GACjB,kCADF;EAEA,MAAMC,KAAK,GAAG;IACZC,SAAS,EAAE,OADC;IAEZC,YAAY,EAAE,IAFF;IAGZC,UAAU,EAAE,IAHA;IAIZC,KAAK,EAAE,IAJK;IAKZC,GAAG,EAAE,IALO;IAMZC,QAAQ,EAAET,QANE;IAOZU,SAAS,EAAE;EAPC,CAAd;EASA,MAAMC,WAAW,GAAG,CAClB;IACE;IACAP,SAAS,EAAE,QAFb;IAGEG,KAAK,EAAE,KAHT;IAIEC,GAAG,EAAE,KAJP;IAKEE,SAAS,EAAE;EALb,CADkB,EAQlB;IACE;IACAN,SAAS,EAAE,QAFb;IAGEG,KAAK,EAAE,GAHT;IAIEC,GAAG,EAAE,GAJP;IAKEI,QAAQ,EAAE,CAACT,KAAD;EALZ,CARkB,EAelB;IACE;IACAC,SAAS,EAAE,QAFb;IAGEG,KAAK,EAAE,GAHT;IAIEC,GAAG,EAAE;EAJP,CAfkB,EAqBlB;IACE;IACAJ,SAAS,EAAE,QAFb;IAGEG,KAAK,EAAE,+EAHT;IAIEG,SAAS,EAAE;EAJb,CArBkB,CAApB;EA4BAP,KAAK,CAACS,QAAN,GAAiBD,WAAjB;EAEA,OAAO;IACLE,IAAI,EAAE,QADD;IAELJ,QAAQ,EAAE;MACRK,OAAO,EAAEd,QAAQ,GAAG,GAAX,GAAiBC,qBADlB;MAERc,IAAI,EAAEb;IAFE,CAFL;IAMLc,OAAO,EAAE,wBANJ;IAOLJ,QAAQ,EAAE,CACRb,IAAI,CAACkB,mBADG,EAERlB,IAAI,CAACmB,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B;MAC3BN,QAAQ,EAAE,CAAC,MAAD;IADiB,CAA7B,CAFQ,EAKR;MACE;MACAR,SAAS,EAAE,MAFb;MAGEG,KAAK,EAAE;IAHT,CALQ,EAURY,MAVQ,CAUDR,WAVC;EAPL,CAAP;AAmBD;;AAEDS,MAAM,CAACC,OAAP,GAAiBvB,MAAjB"},"metadata":{},"sourceType":"script"}