{"ast":null,"code":"'use strict';\n\nmodule.exports = git;\ngit.displayName = 'git';\ngit.aliases = [];\n\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\r\n     * A simple one line comment like in a git status command\r\n     * For instance:\r\n     * $ git status\r\n     * # On branch infinite-scroll\r\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\r\n     * # and have 1 and 2 different commits each, respectively.\r\n     * nothing to commit (working directory clean)\r\n     */\n    comment: /^#.*/m,\n\n    /*\r\n     * Regexp to match the changed lines in a git diff output. Check the example below.\r\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n\n    /*\r\n     * a string (double and simple quote)\r\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n    /*\r\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\r\n     * For instance:\r\n     * $ git add file.txt\r\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\r\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\r\n         * For instance:\r\n         * $ git diff --cached\r\n         * $ git log -p\r\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n\n    /*\r\n     * Coordinates displayed in a git diff command\r\n     * For instance:\r\n     * $ git diff\r\n     * diff --git file.txt file.txt\r\n     * index 6214953..1d54a52 100644\r\n     * --- file.txt\r\n     * +++ file.txt\r\n     * @@ -1 +1,2 @@\r\n     * -Here's my tetx file\r\n     * +Here's my text file\r\n     * +And this is the second line\r\n     */\n    coord: /^@@.*@@$/m,\n\n    /*\r\n     * Match a \"commit [SHA1]\" line in a git log output.\r\n     * For instance:\r\n     * $ git log\r\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\r\n     * Author: lgiraudel\r\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\r\n     *\r\n     *     Add of a new line\r\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  };\n}","map":{"version":3,"names":["module","exports","git","displayName","aliases","Prism","languages","comment","deleted","inserted","string","command","pattern","inside","parameter","coord"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/git.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = git\r\ngit.displayName = 'git'\r\ngit.aliases = []\r\nfunction git(Prism) {\r\n  Prism.languages.git = {\r\n    /*\r\n     * A simple one line comment like in a git status command\r\n     * For instance:\r\n     * $ git status\r\n     * # On branch infinite-scroll\r\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\r\n     * # and have 1 and 2 different commits each, respectively.\r\n     * nothing to commit (working directory clean)\r\n     */\r\n    comment: /^#.*/m,\r\n    /*\r\n     * Regexp to match the changed lines in a git diff output. Check the example below.\r\n     */\r\n    deleted: /^[-–].*/m,\r\n    inserted: /^\\+.*/m,\r\n    /*\r\n     * a string (double and simple quote)\r\n     */\r\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    /*\r\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\r\n     * For instance:\r\n     * $ git add file.txt\r\n     */\r\n    command: {\r\n      pattern: /^.*\\$ git .*$/m,\r\n      inside: {\r\n        /*\r\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\r\n         * For instance:\r\n         * $ git diff --cached\r\n         * $ git log -p\r\n         */\r\n        parameter: /\\s--?\\w+/\r\n      }\r\n    },\r\n    /*\r\n     * Coordinates displayed in a git diff command\r\n     * For instance:\r\n     * $ git diff\r\n     * diff --git file.txt file.txt\r\n     * index 6214953..1d54a52 100644\r\n     * --- file.txt\r\n     * +++ file.txt\r\n     * @@ -1 +1,2 @@\r\n     * -Here's my tetx file\r\n     * +Here's my text file\r\n     * +And this is the second line\r\n     */\r\n    coord: /^@@.*@@$/m,\r\n    /*\r\n     * Match a \"commit [SHA1]\" line in a git log output.\r\n     * For instance:\r\n     * $ git log\r\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\r\n     * Author: lgiraudel\r\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\r\n     *\r\n     *     Add of a new line\r\n     */\r\n    'commit-sha1': /^commit \\w{40}$/m\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;EAClBA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;IACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIK,OAAO,EAAE,OAVW;;IAWpB;AACJ;AACA;IACIC,OAAO,EAAE,UAdW;IAepBC,QAAQ,EAAE,QAfU;;IAgBpB;AACJ;AACA;IACIC,MAAM,EAAE,iCAnBY;;IAoBpB;AACJ;AACA;AACA;AACA;IACIC,OAAO,EAAE;MACPC,OAAO,EAAE,gBADF;MAEPC,MAAM,EAAE;QACN;AACR;AACA;AACA;AACA;AACA;QACQC,SAAS,EAAE;MAPL;IAFD,CAzBW;;IAqCpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,KAAK,EAAE,WAlDa;;IAmDpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,eAAe;EA7DK,CAAtB;AA+DD"},"metadata":{},"sourceType":"script"}