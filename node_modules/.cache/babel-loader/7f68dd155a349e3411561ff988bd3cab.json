{"ast":null,"code":"'use strict';\n\nmodule.exports = maxscript;\nmaxscript.displayName = 'maxscript';\nmaxscript.aliases = [];\n\nfunction maxscript(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp('((?:' + ( // start of line\n        /^/.source + '|' + // operators and other language constructs\n        /[;=<>+\\-*/^({\\[]/.source + '|' + // keywords as part of statements\n        /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source) + ')[ \\t]*)' + '(?!' + keywords.source + ')' + /[a-z_]\\w*\\b/.source + '(?=[ \\t]*(?:' + ( // variable\n        '(?!' + keywords.source + ')' + /[a-z_]/.source + '|' + // number\n        /\\d|-\\.?\\d/.source + '|' + // other expressions or literals\n        /[({'\"$@#?]/.source) + '))', 'im'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [{\n        pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      }, /\\b(?:e|pi)\\b/],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","maxscript","displayName","aliases","Prism","keywords","languages","comment","pattern","greedy","string","lookbehind","path","alias","RegExp","source","argument","keyword","boolean","time","number","constant","color","operator","punctuation"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/maxscript.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = maxscript\r\nmaxscript.displayName = 'maxscript'\r\nmaxscript.aliases = []\r\nfunction maxscript(Prism) {\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\r\n    Prism.languages.maxscript = {\r\n      comment: {\r\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      path: {\r\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\r\n        greedy: true,\r\n        alias: 'string'\r\n      },\r\n      'function-call': {\r\n        pattern: RegExp(\r\n          '((?:' + // start of line\r\n            (/^/.source +\r\n              '|' + // operators and other language constructs\r\n              /[;=<>+\\-*/^({\\[]/.source +\r\n              '|' + // keywords as part of statements\r\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\r\n                .source) +\r\n            ')[ \\t]*)' +\r\n            '(?!' +\r\n            keywords.source +\r\n            ')' +\r\n            /[a-z_]\\w*\\b/.source +\r\n            '(?=[ \\t]*(?:' + // variable\r\n            ('(?!' +\r\n              keywords.source +\r\n              ')' +\r\n              /[a-z_]/.source +\r\n              '|' + // number\r\n              /\\d|-\\.?\\d/.source +\r\n              '|' + // other expressions or literals\r\n              /[({'\"$@#?]/.source) +\r\n            '))',\r\n          'im'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'function'\r\n      },\r\n      'function-definition': {\r\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      argument: {\r\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\r\n        alias: 'attr-name'\r\n      },\r\n      keyword: keywords,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      time: {\r\n        pattern:\r\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      number: [\r\n        {\r\n          pattern:\r\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\r\n          lookbehind: true\r\n        },\r\n        /\\b(?:e|pi)\\b/\r\n      ],\r\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\r\n      color: {\r\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\r\n        alias: 'constant'\r\n      },\r\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\r\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\r\n    }\r\n  })(Prism)\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;EACxB;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjB,IAAIC,QAAQ,GACV,0SADF;IAEAD,KAAK,CAACE,SAAN,CAAgBL,SAAhB,GAA4B;MAC1BM,OAAO,EAAE;QACPC,OAAO,EAAE,6BADF;QAEPC,MAAM,EAAE;MAFD,CADiB;MAK1BC,MAAM,EAAE;QACNF,OAAO,EAAE,gDADH;QAENG,UAAU,EAAE,IAFN;QAGNF,MAAM,EAAE;MAHF,CALkB;MAU1BG,IAAI,EAAE;QACJJ,OAAO,EAAE,2BADL;QAEJC,MAAM,EAAE,IAFJ;QAGJI,KAAK,EAAE;MAHH,CAVoB;MAe1B,iBAAiB;QACfL,OAAO,EAAEM,MAAM,CACb,WAAS;QACN,IAAIC,MAAJ,GACC,GADD,GACO;QACN,mBAAmBA,MAFpB,GAGC,GAHD,GAGO;QACN,6FACGA,MANP,IAOE,UAPF,GAQE,KARF,GASEV,QAAQ,CAACU,MATX,GAUE,GAVF,GAWE,cAAcA,MAXhB,GAYE,cAZF,KAYmB;QAChB,QACCV,QAAQ,CAACU,MADV,GAEC,GAFD,GAGC,SAASA,MAHV,GAIC,GAJD,GAIO;QACN,YAAYA,MALb,GAMC,GAND,GAMO;QACN,aAAaA,MApBjB,IAqBE,IAtBW,EAuBb,IAvBa,CADA;QA0BfJ,UAAU,EAAE,IA1BG;QA2BfF,MAAM,EAAE,IA3BO;QA4BfI,KAAK,EAAE;MA5BQ,CAfS;MA6C1B,uBAAuB;QACrBL,OAAO,EAAE,8BADY;QAErBG,UAAU,EAAE,IAFS;QAGrBE,KAAK,EAAE;MAHc,CA7CG;MAkD1BG,QAAQ,EAAE;QACRR,OAAO,EAAE,mBADD;QAERK,KAAK,EAAE;MAFC,CAlDgB;MAsD1BI,OAAO,EAAEZ,QAtDiB;MAuD1Ba,OAAO,EAAE,oBAvDiB;MAwD1BC,IAAI,EAAE;QACJX,OAAO,EACL,qGAFE;QAGJG,UAAU,EAAE,IAHR;QAIJE,KAAK,EAAE;MAJH,CAxDoB;MA8D1BO,MAAM,EAAE,CACN;QACEZ,OAAO,EACL,uFAFJ;QAGEG,UAAU,EAAE;MAHd,CADM,EAMN,cANM,CA9DkB;MAsE1BU,QAAQ,EAAE,yDAtEgB;MAuE1BC,KAAK,EAAE;QACLd,OAAO,EAAE,8DADJ;QAELK,KAAK,EAAE;MAFF,CAvEmB;MA2E1BU,QAAQ,EAAE,4BA3EgB;MA4E1BC,WAAW,EAAE;IA5Ea,CAA5B;EA8ED,CAjFA,EAiFEpB,KAjFF;AAkFF"},"metadata":{},"sourceType":"script"}