{"ast":null,"code":"'use strict';\n\nmodule.exports = stylus;\nstylus.displayName = 'stylus';\nstylus.aliases = [];\n\nfunction stylus(Prism) {\n  ;\n\n  (function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    }; // 123 -123 .123 -.123 12.3 -12.3\n\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    };\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n        pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n        inside: {\n          unit: unit,\n          number: number,\n          function: /[\\w-]+(?=\\()/,\n          punctuation: /[(),]/\n        }\n      }],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [// We want non-word chars around \"-\" because it is\n      // accepted in property names.\n      /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    };\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    };\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    };\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","stylus","displayName","aliases","Prism","unit","pattern","lookbehind","number","inside","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","atrule","variable","statement","property","selector"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/stylus.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = stylus\r\nstylus.displayName = 'stylus'\r\nstylus.aliases = []\r\nfunction stylus(Prism) {\r\n  ;(function (Prism) {\r\n    var unit = {\r\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\r\n      lookbehind: true\r\n    } // 123 -123 .123 -.123 12.3 -12.3\r\n    var number = {\r\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\r\n      lookbehind: true\r\n    }\r\n    var inside = {\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n        lookbehind: true\r\n      },\r\n      url: {\r\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\r\n        greedy: true\r\n      },\r\n      interpolation: null,\r\n      // See below\r\n      func: null,\r\n      // See below\r\n      important: /\\B!(?:important|optional)\\b/i,\r\n      keyword: {\r\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\r\n        lookbehind: true\r\n      },\r\n      hexcode: /#[\\da-f]{3,6}/i,\r\n      color: [\r\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\r\n        {\r\n          pattern:\r\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\r\n          inside: {\r\n            unit: unit,\r\n            number: number,\r\n            function: /[\\w-]+(?=\\()/,\r\n            punctuation: /[(),]/\r\n          }\r\n        }\r\n      ],\r\n      entity: /\\\\[\\da-f]{1,8}/i,\r\n      unit: unit,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      operator: [\r\n        // We want non-word chars around \"-\" because it is\r\n        // accepted in property names.\r\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\r\n      ],\r\n      number: number,\r\n      punctuation: /[{}()\\[\\];:,]/\r\n    }\r\n    inside['interpolation'] = {\r\n      pattern: /\\{[^\\r\\n}:]+\\}/,\r\n      alias: 'variable',\r\n      inside: {\r\n        delimiter: {\r\n          pattern: /^\\{|\\}$/,\r\n          alias: 'punctuation'\r\n        },\r\n        rest: inside\r\n      }\r\n    }\r\n    inside['func'] = {\r\n      pattern: /[\\w-]+\\([^)]*\\).*/,\r\n      inside: {\r\n        function: /^[^(]+/,\r\n        rest: inside\r\n      }\r\n    }\r\n    Prism.languages.stylus = {\r\n      'atrule-declaration': {\r\n        pattern: /(^[ \\t]*)@.+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          atrule: /^@[\\w-]+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      'variable-declaration': {\r\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          variable: /^\\S+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      statement: {\r\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: /^\\S+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      // A property/value pair cannot end with a comma or a brace\r\n      // It cannot have indented content unless it ended with a semicolon\r\n      'property-declaration': {\r\n        pattern:\r\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          property: {\r\n            pattern: /^[^\\s:]+/,\r\n            inside: {\r\n              interpolation: inside.interpolation\r\n            }\r\n          },\r\n          rest: inside\r\n        }\r\n      },\r\n      // A selector can contain parentheses only as part of a pseudo-element\r\n      // It can span multiple lines.\r\n      // It must end with a comma or an accolade or have indented content.\r\n      selector: {\r\n        pattern:\r\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          interpolation: inside.interpolation,\r\n          comment: inside.comment,\r\n          punctuation: /[{},]/\r\n        }\r\n      },\r\n      func: inside.func,\r\n      string: inside.string,\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      interpolation: inside.interpolation,\r\n      punctuation: /[{}()\\[\\];:.]/\r\n    }\r\n  })(Prism)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}