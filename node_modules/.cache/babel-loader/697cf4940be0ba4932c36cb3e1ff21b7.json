{"ast":null,"code":"'use strict';\n\nmodule.exports = agda;\nagda.displayName = 'agda';\nagda.aliases = [];\n\nfunction agda(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    };\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","agda","displayName","aliases","Prism","languages","comment","string","pattern","greedy","punctuation","lookbehind","function","operator","keyword"],"sources":["/Users/aaronyeh/Downloads/Plant Buddy/node_modules/refractor/lang/agda.js"],"sourcesContent":["'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;EACnB;;EAAC,CAAC,UAAUA,KAAV,EAAiB;IACjBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;MACrBK,OAAO,EAAE,2BADY;MAErBC,MAAM,EAAE;QACNC,OAAO,EAAE,qCADH;QAENC,MAAM,EAAE;MAFF,CAFa;MAMrBC,WAAW,EAAE,aANQ;MAOrB,cAAc;QACZF,OAAO,EAAE,wBADG;QAEZG,UAAU,EAAE;MAFA,CAPO;MAWrBC,QAAQ,EAAE;QACRJ,OAAO,EAAE,gCADD;QAERG,UAAU,EAAE;MAFJ,CAXW;MAerBE,QAAQ,EAAE;QACRL,OAAO,EAAE,oCADD;QAERG,UAAU,EAAE;MAFJ,CAfW;MAmBrBG,OAAO,EACL;IApBmB,CAAvB;EAsBD,CAvBA,EAuBEV,KAvBF;AAwBF"},"metadata":{},"sourceType":"script"}