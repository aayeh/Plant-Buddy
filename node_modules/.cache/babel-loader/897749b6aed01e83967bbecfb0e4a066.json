{"ast":null,"code":"'use strict';\n\nmodule.exports = erlang;\nerlang.displayName = 'erlang';\nerlang.aliases = [];\n\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [/\\$\\\\?./, /\\b\\d+#[a-z0-9]+/i, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/, {\n      // We don't want to match <<\n      pattern: /(^|[^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /(^|[^>])>(?!>)/,\n      lookbehind: true\n    }],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  };\n}","map":{"version":3,"names":["module","exports","erlang","displayName","aliases","Prism","languages","comment","string","pattern","greedy","alias","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/erlang.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = erlang\r\nerlang.displayName = 'erlang'\r\nerlang.aliases = []\r\nfunction erlang(Prism) {\r\n  Prism.languages.erlang = {\r\n    comment: /%.+/,\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    'quoted-function': {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\r\n      alias: 'function'\r\n    },\r\n    'quoted-atom': {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\r\n      alias: 'atom'\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\r\n    number: [\r\n      /\\$\\\\?./,\r\n      /\\b\\d+#[a-z0-9]+/i,\r\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\r\n    ],\r\n    function: /\\b[a-z][\\w@]*(?=\\()/,\r\n    variable: {\r\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\r\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\r\n      lookbehind: true\r\n    },\r\n    operator: [\r\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\r\n      {\r\n        // We don't want to match <<\r\n        pattern: /(^|[^<])<(?!<)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // We don't want to match >>\r\n        pattern: /(^|[^>])>(?!>)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    atom: /\\b[a-z][\\w@]*/,\r\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;EACrBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;IACvBK,OAAO,EAAE,KADc;IAEvBC,MAAM,EAAE;MACNC,OAAO,EAAE,uBADH;MAENC,MAAM,EAAE;IAFF,CAFe;IAMvB,mBAAmB;MACjBD,OAAO,EAAE,6BADQ;MAEjBE,KAAK,EAAE;IAFU,CANI;IAUvB,eAAe;MACbF,OAAO,EAAE,uBADI;MAEbE,KAAK,EAAE;IAFM,CAVQ;IAcvBC,OAAO,EAAE,oBAdc;IAevBC,OAAO,EAAE,yDAfc;IAgBvBC,MAAM,EAAE,CACN,QADM,EAEN,kBAFM,EAGN,4CAHM,CAhBe;IAqBvBC,QAAQ,EAAE,qBArBa;IAsBvBC,QAAQ,EAAE;MACR;MACAP,OAAO,EAAE,+BAFD;MAGRQ,UAAU,EAAE;IAHJ,CAtBa;IA2BvBC,QAAQ,EAAE,CACR,8GADQ,EAER;MACE;MACAT,OAAO,EAAE,gBAFX;MAGEQ,UAAU,EAAE;IAHd,CAFQ,EAOR;MACE;MACAR,OAAO,EAAE,gBAFX;MAGEQ,UAAU,EAAE;IAHd,CAPQ,CA3Ba;IAwCvBE,IAAI,EAAE,eAxCiB;IAyCvBC,WAAW,EAAE;EAzCU,CAAzB;AA2CD"},"metadata":{},"sourceType":"script"}