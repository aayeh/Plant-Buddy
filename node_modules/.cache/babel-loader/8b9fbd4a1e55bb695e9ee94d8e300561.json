{"ast":null,"code":"'use strict';\n\nmodule.exports = markup;\nmarkup.displayName = 'markup';\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss'];\n\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [{\n      pattern: /&[\\da-z]{1,8};/i,\n      alias: 'named-entity'\n    }, /&#x?[\\da-f]{1,8};/i]\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\r\n     * Adds an inlined language to markup.\r\n     *\r\n     * An example of an inlined language is CSS with `<style>` tags.\r\n     *\r\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addInlined('style', 'css');\r\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      };\n      var def = {};\n      def[tagName] = {\n        pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n          return tagName;\n        }), 'i'),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      };\n      Prism.languages.insertBefore('markup', 'cdata', def);\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\r\n     * Adds an pattern to highlight languages embedded in HTML attributes.\r\n     *\r\n     * An example of an inlined language is CSS with `style` attributes.\r\n     *\r\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addAttribute('style', 'css');\r\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          }\n        }\n      });\n    }\n  });\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n  Prism.languages.xml = Prism.languages.extend('markup', {});\n  Prism.languages.ssml = Prism.languages.xml;\n  Prism.languages.atom = Prism.languages.xml;\n  Prism.languages.rss = Prism.languages.xml;\n}","map":{"version":3,"names":["module","exports","markup","displayName","aliases","Prism","languages","comment","pattern","greedy","prolog","doctype","inside","lookbehind","string","punctuation","name","cdata","tag","namespace","alias","entity","hooks","add","env","type","attributes","content","value","replace","Object","defineProperty","addInlined","tagName","lang","includedCdataInside","def","RegExp","source","insertBefore","attrName","push","html","mathml","svg","xml","extend","ssml","atom","rss"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/markup.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = markup\r\nmarkup.displayName = 'markup'\r\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\r\nfunction markup(Prism) {\r\n  Prism.languages.markup = {\r\n    comment: {\r\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\r\n      greedy: true\r\n    },\r\n    prolog: {\r\n      pattern: /<\\?[\\s\\S]+?\\?>/,\r\n      greedy: true\r\n    },\r\n    doctype: {\r\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\r\n      pattern:\r\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\r\n      greedy: true,\r\n      inside: {\r\n        'internal-subset': {\r\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: null // see below\r\n        },\r\n        string: {\r\n          pattern: /\"[^\"]*\"|'[^']*'/,\r\n          greedy: true\r\n        },\r\n        punctuation: /^<!|>$|[[\\]]/,\r\n        'doctype-tag': /^DOCTYPE/i,\r\n        name: /[^\\s<>'\"]+/\r\n      }\r\n    },\r\n    cdata: {\r\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n      greedy: true\r\n    },\r\n    tag: {\r\n      pattern:\r\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\r\n      greedy: true,\r\n      inside: {\r\n        tag: {\r\n          pattern: /^<\\/?[^\\s>\\/]+/,\r\n          inside: {\r\n            punctuation: /^<\\/?/,\r\n            namespace: /^[^\\s>\\/:]+:/\r\n          }\r\n        },\r\n        'special-attr': [],\r\n        'attr-value': {\r\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\r\n          inside: {\r\n            punctuation: [\r\n              {\r\n                pattern: /^=/,\r\n                alias: 'attr-equals'\r\n              },\r\n              /\"|'/\r\n            ]\r\n          }\r\n        },\r\n        punctuation: /\\/?>/,\r\n        'attr-name': {\r\n          pattern: /[^\\s>\\/]+/,\r\n          inside: {\r\n            namespace: /^[^\\s>\\/:]+:/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    entity: [\r\n      {\r\n        pattern: /&[\\da-z]{1,8};/i,\r\n        alias: 'named-entity'\r\n      },\r\n      /&#x?[\\da-f]{1,8};/i\r\n    ]\r\n  }\r\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n    Prism.languages.markup['entity']\r\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\r\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\r\n  Prism.hooks.add('wrap', function (env) {\r\n    if (env.type === 'entity') {\r\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\r\n    }\r\n  })\r\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\r\n    /**\r\n     * Adds an inlined language to markup.\r\n     *\r\n     * An example of an inlined language is CSS with `<style>` tags.\r\n     *\r\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addInlined('style', 'css');\r\n     */\r\n    value: function addInlined(tagName, lang) {\r\n      var includedCdataInside = {}\r\n      includedCdataInside['language-' + lang] = {\r\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\r\n        lookbehind: true,\r\n        inside: Prism.languages[lang]\r\n      }\r\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\r\n      var inside = {\r\n        'included-cdata': {\r\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n          inside: includedCdataInside\r\n        }\r\n      }\r\n      inside['language-' + lang] = {\r\n        pattern: /[\\s\\S]+/,\r\n        inside: Prism.languages[lang]\r\n      }\r\n      var def = {}\r\n      def[tagName] = {\r\n        pattern: RegExp(\r\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\r\n            /__/g,\r\n            function () {\r\n              return tagName\r\n            }\r\n          ),\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: inside\r\n      }\r\n      Prism.languages.insertBefore('markup', 'cdata', def)\r\n    }\r\n  })\r\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\r\n    /**\r\n     * Adds an pattern to highlight languages embedded in HTML attributes.\r\n     *\r\n     * An example of an inlined language is CSS with `style` attributes.\r\n     *\r\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addAttribute('style', 'css');\r\n     */\r\n    value: function (attrName, lang) {\r\n      Prism.languages.markup.tag.inside['special-attr'].push({\r\n        pattern: RegExp(\r\n          /(^|[\"'\\s])/.source +\r\n            '(?:' +\r\n            attrName +\r\n            ')' +\r\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          'attr-name': /^[^\\s=]+/,\r\n          'attr-value': {\r\n            pattern: /=[\\s\\S]+/,\r\n            inside: {\r\n              value: {\r\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\r\n                lookbehind: true,\r\n                alias: [lang, 'language-' + lang],\r\n                inside: Prism.languages[lang]\r\n              },\r\n              punctuation: [\r\n                {\r\n                  pattern: /^=/,\r\n                  alias: 'attr-equals'\r\n                },\r\n                /\"|'/\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n  Prism.languages.html = Prism.languages.markup\r\n  Prism.languages.mathml = Prism.languages.markup\r\n  Prism.languages.svg = Prism.languages.markup\r\n  Prism.languages.xml = Prism.languages.extend('markup', {})\r\n  Prism.languages.ssml = Prism.languages.xml\r\n  Prism.languages.atom = Prism.languages.xml\r\n  Prism.languages.rss = Prism.languages.xml\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}