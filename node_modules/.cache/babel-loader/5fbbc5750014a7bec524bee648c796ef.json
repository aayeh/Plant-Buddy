{"ast":null,"code":"/*\r\nLanguage: YAML\r\nDescription: Yet Another Markdown Language\r\nAuthor: Stefan Wienert <stwienert@gmail.com>\r\nContributors: Carl Baxter <carl@cbax.tech>\r\nRequires: ruby.js\r\nWebsite: https://yaml.org\r\nCategory: common, config\r\n*/\nfunction yaml(hljs) {\n  var LITERALS = 'true false yes no null'; // YAML spec allows non-reserved URI characters in tags.\n\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+'; // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n\n  var KEY = {\n    className: 'attr',\n    variants: [{\n      begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)'\n    }, {\n      begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'\n    }, // double quoted keys\n    {\n      begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)'\n    } // single quoted keys\n    ]\n  };\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [{\n      begin: /\\{\\{/,\n      end: /\\}\\}/\n    }, // jinja templates Ansible\n    {\n      begin: /%\\{/,\n      end: /\\}/\n    } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /\\S+/\n    }],\n    contains: [hljs.BACKSLASH_ESCAPE, TEMPLATE_VARIABLES]\n  }; // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n\n  var CONTAINER_STRING = hljs.inherit(STRING, {\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /[^\\s,{}[\\]]+/\n    }]\n  });\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  var TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n  var VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  var OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  var ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  var MODES = [KEY, {\n    className: 'meta',\n    begin: '^---\\\\s*$',\n    relevance: 10\n  }, {\n    // multi line string\n    // Blocks start with a | or > followed by a newline\n    //\n    // Indentation of subsequent lines must be the same to\n    // be considered part of the block\n    className: 'string',\n    begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n  }, {\n    // Ruby/Rails erb\n    begin: '<%[%=-]?',\n    end: '[%-]?%>',\n    subLanguage: 'ruby',\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0\n  }, {\n    // named tags\n    className: 'type',\n    begin: '!\\\\w+!' + URI_CHARACTERS\n  }, // https://yaml.org/spec/1.2/spec.html#id2784064\n  {\n    // verbatim tags\n    className: 'type',\n    begin: '!<' + URI_CHARACTERS + \">\"\n  }, {\n    // primary tags\n    className: 'type',\n    begin: '!' + URI_CHARACTERS\n  }, {\n    // secondary tags\n    className: 'type',\n    begin: '!!' + URI_CHARACTERS\n  }, {\n    // fragment id &ref\n    className: 'meta',\n    begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n  }, {\n    // fragment reference *ref\n    className: 'meta',\n    begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n  }, {\n    // array listing\n    className: 'bullet',\n    // TODO: remove |$ hack when we have proper look-ahead support\n    begin: '-(?=[ ]|$)',\n    relevance: 0\n  }, hljs.HASH_COMMENT_MODE, {\n    beginKeywords: LITERALS,\n    keywords: {\n      literal: LITERALS\n    }\n  }, TIMESTAMP, // numbers are any valid C-style number that\n  // sit isolated from other words\n  {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE + '\\\\b',\n    relevance: 0\n  }, OBJECT, ARRAY, STRING];\n  var VALUE_MODES = [...MODES];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: ['yml'],\n    contains: MODES\n  };\n}\n\nmodule.exports = yaml;","map":{"version":3,"names":["yaml","hljs","LITERALS","URI_CHARACTERS","KEY","className","variants","begin","TEMPLATE_VARIABLES","end","STRING","relevance","contains","BACKSLASH_ESCAPE","CONTAINER_STRING","inherit","DATE_RE","TIME_RE","FRACTION_RE","ZONE_RE","TIMESTAMP","VALUE_CONTAINER","endsWithParent","excludeEnd","keywords","OBJECT","illegal","ARRAY","MODES","subLanguage","excludeBegin","UNDERSCORE_IDENT_RE","HASH_COMMENT_MODE","beginKeywords","literal","C_NUMBER_RE","VALUE_MODES","pop","push","name","case_insensitive","aliases","module","exports"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/highlight.js/lib/languages/yaml.js"],"sourcesContent":["/*\r\nLanguage: YAML\r\nDescription: Yet Another Markdown Language\r\nAuthor: Stefan Wienert <stwienert@gmail.com>\r\nContributors: Carl Baxter <carl@cbax.tech>\r\nRequires: ruby.js\r\nWebsite: https://yaml.org\r\nCategory: common, config\r\n*/\r\nfunction yaml(hljs) {\r\n  var LITERALS = 'true false yes no null';\r\n\r\n  // YAML spec allows non-reserved URI characters in tags.\r\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\r\n\r\n  // Define keys as starting with a word character\r\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\r\n  // ...and ending with a colon followed immediately by a space, tab or newline.\r\n  // The YAML spec allows for much more than this, but this covers most use-cases.\r\n  var KEY = {\r\n    className: 'attr',\r\n    variants: [\r\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\r\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\r\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\r\n    ]\r\n  };\r\n\r\n  var TEMPLATE_VARIABLES = {\r\n    className: 'template-variable',\r\n    variants: [\r\n      { begin: /\\{\\{/, end: /\\}\\}/ }, // jinja templates Ansible\r\n      { begin: /%\\{/, end: /\\}/ } // Ruby i18n\r\n    ]\r\n  };\r\n  var STRING = {\r\n    className: 'string',\r\n    relevance: 0,\r\n    variants: [\r\n      { begin: /'/, end: /'/ },\r\n      { begin: /\"/, end: /\"/ },\r\n      { begin: /\\S+/ }\r\n    ],\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      TEMPLATE_VARIABLES\r\n    ]\r\n  };\r\n\r\n  // Strings inside of value containers (objects) can't contain braces,\r\n  // brackets, or commas\r\n  var CONTAINER_STRING = hljs.inherit(STRING, {\r\n    variants: [\r\n      { begin: /'/, end: /'/ },\r\n      { begin: /\"/, end: /\"/ },\r\n      { begin: /[^\\s,{}[\\]]+/ }\r\n    ]\r\n  });\r\n\r\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\r\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\r\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\r\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\r\n  var TIMESTAMP = {\r\n    className: 'number',\r\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\r\n  };\r\n\r\n  var VALUE_CONTAINER = {\r\n    end: ',',\r\n    endsWithParent: true,\r\n    excludeEnd: true,\r\n    keywords: LITERALS,\r\n    relevance: 0\r\n  };\r\n  var OBJECT = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: [VALUE_CONTAINER],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n  var ARRAY = {\r\n    begin: '\\\\[',\r\n    end: '\\\\]',\r\n    contains: [VALUE_CONTAINER],\r\n    illegal: '\\\\n',\r\n    relevance: 0\r\n  };\r\n\r\n  var MODES = [\r\n    KEY,\r\n    {\r\n      className: 'meta',\r\n      begin: '^---\\\\s*$',\r\n      relevance: 10\r\n    },\r\n    { // multi line string\r\n      // Blocks start with a | or > followed by a newline\r\n      //\r\n      // Indentation of subsequent lines must be the same to\r\n      // be considered part of the block\r\n      className: 'string',\r\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\r\n    },\r\n    { // Ruby/Rails erb\r\n      begin: '<%[%=-]?',\r\n      end: '[%-]?%>',\r\n      subLanguage: 'ruby',\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      relevance: 0\r\n    },\r\n    { // named tags\r\n      className: 'type',\r\n      begin: '!\\\\w+!' + URI_CHARACTERS\r\n    },\r\n    // https://yaml.org/spec/1.2/spec.html#id2784064\r\n    { // verbatim tags\r\n      className: 'type',\r\n      begin: '!<' + URI_CHARACTERS + \">\"\r\n    },\r\n    { // primary tags\r\n      className: 'type',\r\n      begin: '!' + URI_CHARACTERS\r\n    },\r\n    { // secondary tags\r\n      className: 'type',\r\n      begin: '!!' + URI_CHARACTERS\r\n    },\r\n    { // fragment id &ref\r\n      className: 'meta',\r\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // fragment reference *ref\r\n      className: 'meta',\r\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\r\n    },\r\n    { // array listing\r\n      className: 'bullet',\r\n      // TODO: remove |$ hack when we have proper look-ahead support\r\n      begin: '-(?=[ ]|$)',\r\n      relevance: 0\r\n    },\r\n    hljs.HASH_COMMENT_MODE,\r\n    {\r\n      beginKeywords: LITERALS,\r\n      keywords: { literal: LITERALS }\r\n    },\r\n    TIMESTAMP,\r\n    // numbers are any valid C-style number that\r\n    // sit isolated from other words\r\n    {\r\n      className: 'number',\r\n      begin: hljs.C_NUMBER_RE + '\\\\b',\r\n      relevance: 0\r\n    },\r\n    OBJECT,\r\n    ARRAY,\r\n    STRING\r\n  ];\r\n\r\n  var VALUE_MODES = [...MODES];\r\n  VALUE_MODES.pop();\r\n  VALUE_MODES.push(CONTAINER_STRING);\r\n  VALUE_CONTAINER.contains = VALUE_MODES;\r\n\r\n  return {\r\n    name: 'YAML',\r\n    case_insensitive: true,\r\n    aliases: [ 'yml' ],\r\n    contains: MODES\r\n  };\r\n}\r\n\r\nmodule.exports = yaml;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}