{"ast":null,"code":"'use strict';\n\nmodule.exports = javadoclike;\njavadoclike.displayName = 'javadoclike';\njavadoclike.aliases = [];\n\nfunction javadoclike(Prism) {\n  ;\n\n  (function (Prism) {\n    var javaDocLike = Prism.languages.javadoclike = {\n      parameter: {\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    };\n    /**\r\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\r\n     *\r\n     * @param {string} lang the language add doc comment support to.\r\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\r\n     */\n\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment';\n      var grammar = Prism.languages[lang];\n\n      if (!grammar) {\n        return;\n      }\n\n      var token = grammar[tokenName];\n\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {};\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        };\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n        token = grammar[tokenName];\n      }\n\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        };\n      }\n\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            };\n          }\n\n          callback(token[i]);\n        }\n      } else {\n        callback(token);\n      }\n    }\n    /**\r\n     * Adds doc-comment support to the given languages for the given documentation language.\r\n     *\r\n     * @param {string[]|string} languages\r\n     * @param {Object} docLanguage\r\n     */\n\n\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages];\n      }\n\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {};\n          }\n\n          pattern.inside.rest = docLanguage;\n        });\n      });\n    }\n\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    });\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n  })(Prism);\n}","map":{"version":3,"names":["module","exports","javadoclike","displayName","aliases","Prism","javaDocLike","languages","parameter","pattern","lookbehind","keyword","punctuation","docCommentSupport","lang","callback","tokenName","grammar","token","definition","alias","insertBefore","RegExp","Array","isArray","i","l","length","addSupport","docLanguage","forEach","inside","rest","Object","defineProperty","value"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/javadoclike.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = javadoclike\r\njavadoclike.displayName = 'javadoclike'\r\njavadoclike.aliases = []\r\nfunction javadoclike(Prism) {\r\n  ;(function (Prism) {\r\n    var javaDocLike = (Prism.languages.javadoclike = {\r\n      parameter: {\r\n        pattern:\r\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\r\n        lookbehind: true\r\n      },\r\n      keyword: {\r\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\r\n        // @word, {@word}\r\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[{}]/\r\n    })\r\n    /**\r\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\r\n     *\r\n     * @param {string} lang the language add doc comment support to.\r\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\r\n     */\r\n    function docCommentSupport(lang, callback) {\r\n      var tokenName = 'doc-comment'\r\n      var grammar = Prism.languages[lang]\r\n      if (!grammar) {\r\n        return\r\n      }\r\n      var token = grammar[tokenName]\r\n      if (!token) {\r\n        // add doc comment: /** */\r\n        var definition = {}\r\n        definition[tokenName] = {\r\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\r\n          lookbehind: true,\r\n          alias: 'comment'\r\n        }\r\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\r\n        token = grammar[tokenName]\r\n      }\r\n      if (token instanceof RegExp) {\r\n        // convert regex to object\r\n        token = grammar[tokenName] = {\r\n          pattern: token\r\n        }\r\n      }\r\n      if (Array.isArray(token)) {\r\n        for (var i = 0, l = token.length; i < l; i++) {\r\n          if (token[i] instanceof RegExp) {\r\n            token[i] = {\r\n              pattern: token[i]\r\n            }\r\n          }\r\n          callback(token[i])\r\n        }\r\n      } else {\r\n        callback(token)\r\n      }\r\n    }\r\n    /**\r\n     * Adds doc-comment support to the given languages for the given documentation language.\r\n     *\r\n     * @param {string[]|string} languages\r\n     * @param {Object} docLanguage\r\n     */\r\n    function addSupport(languages, docLanguage) {\r\n      if (typeof languages === 'string') {\r\n        languages = [languages]\r\n      }\r\n      languages.forEach(function (lang) {\r\n        docCommentSupport(lang, function (pattern) {\r\n          if (!pattern.inside) {\r\n            pattern.inside = {}\r\n          }\r\n          pattern.inside.rest = docLanguage\r\n        })\r\n      })\r\n    }\r\n    Object.defineProperty(javaDocLike, 'addSupport', {\r\n      value: addSupport\r\n    })\r\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\r\n  })(Prism)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}