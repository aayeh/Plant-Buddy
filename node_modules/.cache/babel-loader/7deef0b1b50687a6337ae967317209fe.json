{"ast":null,"code":"'use strict';\n\nmodule.exports = fortran;\nfortran.displayName = 'fortran';\nfortran.aliases = [];\n\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [// Types\n    /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n    /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n    /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n    /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n    operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i, {\n      // Use lookbehind to prevent confusion with (/ /)\n      pattern: /(^|(?!\\().)\\/(?!\\))/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  };\n}","map":{"version":3,"names":["module","exports","fortran","displayName","aliases","Prism","languages","pattern","alias","string","inside","comment","lookbehind","greedy","boolean","number","keyword","operator","punctuation"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/refractor/lang/fortran.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = fortran\r\nfortran.displayName = 'fortran'\r\nfortran.aliases = []\r\nfunction fortran(Prism) {\r\n  Prism.languages.fortran = {\r\n    'quoted-number': {\r\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\r\n      alias: 'number'\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\r\n      inside: {\r\n        comment: {\r\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\r\n          lookbehind: true\r\n        }\r\n      }\r\n    },\r\n    comment: {\r\n      pattern: /!.*/,\r\n      greedy: true\r\n    },\r\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\r\n    keyword: [\r\n      // Types\r\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\r\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\r\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\r\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\r\n    ],\r\n    operator: [\r\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\r\n      {\r\n        // Use lookbehind to prevent confusion with (/ /)\r\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\r\n  }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;EACtBA,KAAK,CAACC,SAAN,CAAgBJ,OAAhB,GAA0B;IACxB,iBAAiB;MACfK,OAAO,EAAE,yBADM;MAEfC,KAAK,EAAE;IAFQ,CADO;IAKxBC,MAAM,EAAE;MACNF,OAAO,EACL,+FAFI;MAGNG,MAAM,EAAE;QACNC,OAAO,EAAE;UACPJ,OAAO,EAAE,uBADF;UAEPK,UAAU,EAAE;QAFL;MADH;IAHF,CALgB;IAexBD,OAAO,EAAE;MACPJ,OAAO,EAAE,KADF;MAEPM,MAAM,EAAE;IAFD,CAfe;IAmBxBC,OAAO,EAAE,8BAnBe;IAoBxBC,MAAM,EAAE,wDApBgB;IAqBxBC,OAAO,EAAE,CACP;IACA,mEAFO,EAE8D;IACrE,+HAHO,EAG0H;IACjI,2VAJO,EAIsV;IAC7V,6JALO,CArBe;IA4BxBC,QAAQ,EAAE,CACR,oDADQ,EAER;MACE;MACAV,OAAO,EAAE,qBAFX;MAGEK,UAAU,EAAE;IAHd,CAFQ,CA5Bc;IAoCxBM,WAAW,EAAE;EApCW,CAA1B;AAsCD"},"metadata":{},"sourceType":"script"}