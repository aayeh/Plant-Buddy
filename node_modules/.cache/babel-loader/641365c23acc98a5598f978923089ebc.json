{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","classNames","isRequiredForA11y","React","useDropdownToggle","useMergedRefs","Button","useBootstrapPrefix","useWrappedRefWithWarning","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","children","childBsPrefix","_ref$as","as","Component","props","prefix","undefined","_useDropdownToggle","toggleProps","toggle","createElement","onClick","displayName"],"sources":["C:/Users/ayeh8/Documents/Plant-Buddy/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\r\nimport React from 'react';\r\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\r\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport Button from './Button';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\r\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      split = _ref.split,\r\n      className = _ref.className,\r\n      children = _ref.children,\r\n      childBsPrefix = _ref.childBsPrefix,\r\n      _ref$as = _ref.as,\r\n      Component = _ref$as === void 0 ? Button : _ref$as,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\r\n\r\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\r\n\r\n  if (childBsPrefix !== undefined) {\r\n    props.bsPrefix = childBsPrefix;\r\n  }\r\n\r\n  var _useDropdownToggle = useDropdownToggle(),\r\n      toggleProps = _useDropdownToggle[0],\r\n      toggle = _useDropdownToggle[1].toggle;\r\n\r\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\r\n  // underlying component, to allow it to render size and style variants.\r\n\r\n  return /*#__PURE__*/React.createElement(Component, _extends({\r\n    onClick: toggle,\r\n    className: classNames(className, prefix, split && prefix + \"-split\")\r\n  }, toggleProps, props), children);\r\n});\r\nDropdownToggle.displayName = 'DropdownToggle';\r\nexport default DropdownToggle;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,IAAIC,cAAc,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;EACzD,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;EAAA,IACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;EAAA,IAEIC,SAAS,GAAGJ,IAAI,CAACI,SAFrB;EAAA,IAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;EAAA,IAIIC,aAAa,GAAGN,IAAI,CAACM,aAJzB;EAAA,IAKIC,OAAO,GAAGP,IAAI,CAACQ,EALnB;EAAA,IAMIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqBZ,MAArB,GAA8BY,OAN9C;EAAA,IAOIG,KAAK,GAAGrB,6BAA6B,CAACW,IAAD,EAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,eAA/C,EAAgE,IAAhE,CAAP,CAPzC;;EASA,IAAIW,MAAM,GAAGf,kBAAkB,CAACM,QAAD,EAAW,iBAAX,CAA/B;;EAEA,IAAII,aAAa,KAAKM,SAAtB,EAAiC;IAC/BF,KAAK,CAACR,QAAN,GAAiBI,aAAjB;EACD;;EAED,IAAIO,kBAAkB,GAAGpB,iBAAiB,EAA1C;EAAA,IACIqB,WAAW,GAAGD,kBAAkB,CAAC,CAAD,CADpC;EAAA,IAEIE,MAAM,GAAGF,kBAAkB,CAAC,CAAD,CAAlB,CAAsBE,MAFnC;;EAIAD,WAAW,CAACb,GAAZ,GAAkBP,aAAa,CAACoB,WAAW,CAACb,GAAb,EAAkBJ,wBAAwB,CAACI,GAAD,EAAM,gBAAN,CAA1C,CAA/B,CApByD,CAoB0C;EACnG;;EAEA,OAAO,aAAaT,KAAK,CAACwB,aAAN,CAAoBP,SAApB,EAA+BrB,QAAQ,CAAC;IAC1D6B,OAAO,EAAEF,MADiD;IAE1DX,SAAS,EAAEd,UAAU,CAACc,SAAD,EAAYO,MAAZ,EAAoBR,KAAK,IAAIQ,MAAM,GAAG,QAAtC;EAFqC,CAAD,EAGxDG,WAHwD,EAG3CJ,KAH2C,CAAvC,EAGIL,QAHJ,CAApB;AAID,CA3BoB,CAArB;AA4BAP,cAAc,CAACoB,WAAf,GAA6B,gBAA7B;AACA,eAAepB,cAAf"},"metadata":{},"sourceType":"module"}